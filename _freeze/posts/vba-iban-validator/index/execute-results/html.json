{
  "hash": "6262beb365a4849b0617da9eeb5d83ff",
  "result": {
    "markdown": "---\ntitle: \"VBA IBAN Validator\"\ndescription: \"A function in VBA that checks the validity of an IBAN (International Bank Account Number).\"\nauthor: \"Aswin van Woudenberg\"\ndate: \"2013-07-18\"\ncategories: [programming, vba]\ntoc: true\n---\n\nFrom February 2014 onwards, IBAN will be the new European standard for bank account numbers. This standardization is part of the SEPA initiative to improve the efficiency of cross-border euro payments. I wrote an IBAN validator in VBA for an MS Access database Iâ€™m maintaining, but you can also use it in Excel or any other application that supports VBA.\n\n\n```{monobasic} \nOption Compare Database\nOption Explicit\n\n' http://en.wikipedia.org/wiki/International_Bank_Account_Number\nPrivate Const IbanCountryLengths As String = \"AL28AD24AT20AZ28BH22BE16BA20BR29BG22CR21HR21CY28CZ24DK18DO28EE20FO18\" & _\n                                             \"FI18FR27GE22DE22GI23GR27GL18GT28HU28IS26IE22IL23IT27KZ20KW30LV21LB28\" & _\n                                             \"LI21LT20LU20MK19MT31MR27MU30MC27MD24ME22NL18NO15PK24PS29PL28PT25RO24\" & _\n                                             \"SM27SA24RS22SK24SI19ES24SE24CH21TN24TR26AE23GB22VG24QA29\"\n\nPrivate Function ValidIbanCountryLength(CountryCode As String, IbanLength As Integer) As Boolean\n    Dim i As Integer\n    For i = 0 To Len(IbanCountryLengths) / 4 - 1\n        If Mid(IbanCountryLengths, i * 4 + 1, 2) = CountryCode And _\n                    CInt(Mid(IbanCountryLengths, i * 4 + 3, 2)) = IbanLength Then\n            ValidIbanCountryLength = True\n            Exit Function\n        End If\n    Next i\n    ValidIbanCountryLength = False\nEnd Function\n\nPrivate Function Mod97(Num As String) As Integer\n    Dim lngTemp As Long\n    Dim strTemp As String\n\n    Do While Val(Num) >= 97\n        If Len(Num) > 5 Then\n            strTemp = Left(Num, 5)\n            Num = Right(Num, Len(Num) - 5)\n        Else\n            strTemp = Num\n            Num = \"\"\n        End If\n        lngTemp = CLng(strTemp)\n        lngTemp = lngTemp Mod 97\n        strTemp = CStr(lngTemp)\n        Num = strTemp & Num\n    Loop\n    Mod97 = CInt(Num)\nEnd Function\n\nPublic Function ValidIban(IBAN As String) As Boolean\n    Dim strIban As String\n    Dim i As Integer\n\n    strIban = UCase(IBAN)\n    ' Remove spaces\n    strIban = Replace(strIban, \" \", \"\")\n\n    ' Check if IBAN contains only uppercase characters and numbers\n    For i = 1 To Len(strIban)\n        If Not ((Asc(Mid(strIban, i, 1)) <= Asc(\"9\") And Asc(Mid(strIban, i, 1)) >= Asc(\"0\")) Or _\n                (Asc(Mid(strIban, i, 1)) <= Asc(\"Z\") And Asc(Mid(strIban, i, 1)) >= Asc(\"A\"))) Then\n            ValidIban = False\n            Exit Function\n        End If\n    Next i\n\n    ' Check if length of IBAN equals expected length for country\n    If Not ValidIbanCountryLength(Left(strIban, 2), Len(strIban)) Then\n        ValidIban = False\n        Exit Function\n    End If\n\n    ' Rearrange\n    strIban = Right(strIban, Len(strIban) - 4) & Left(strIban, 4)\n\n    ' Replace characters\n    For i = 0 To 25\n        strIban = Replace(strIban, Chr(i + Asc(\"A\")), i + 10)\n    Next i\n\n    ' Check remainder\n    ValidIban = Mod97(strIban) = 1\nEnd Function\n```\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}