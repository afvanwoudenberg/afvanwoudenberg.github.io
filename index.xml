<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Aswin van Woudenberg</title>
<link>https://www.aswinvanwoudenberg.com/index.html</link>
<atom:link href="https://www.aswinvanwoudenberg.com/index.xml" rel="self" type="application/rss+xml"/>
<description>Aswin&#39;s blog</description>
<generator>quarto-1.2.313</generator>
<lastBuildDate>Mon, 03 Jan 2022 23:00:00 GMT</lastBuildDate>
<item>
  <title>How to Traverse a Decision Tree and Win at Guess Who?</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/index.html</link>
  <description><![CDATA[ 




<p>In the scikit-learn machine learning library, the <code>predict</code> method is used to make predictions on new data with a fitted model. This method expects the input data to have the same number of features as the data that the model was trained on. This makes sense for many models, but not necessarily for decision trees. Since decision trees look at one feature at a time, they may only need a subset of all features to make a prediction.</p>
<p>If we want to provide solely the features that are actually considered when making a prediction, we will need to traverse a decision tree iteratively.</p>
<p>To show you how this works, we’ll fit a decision tree model to a dataset of <em>Guess Who</em> character features. After fitting the model, we can traverse the resulting tree to make a prediction about the character’s identity.</p>
<section id="wait-how-do-i-play-guess-who-again" class="level2">
<h2 class="anchored" data-anchor-id="wait-how-do-i-play-guess-who-again">Wait, how do I play Guess Who again?</h2>
<p>It may have been a while since you played this game, so let’s start with a refresher.</p>
<p>In Guess Who two players try to guess the opponent’s character by asking yes-no questions. Each player starts the game with a board that includes cartoon images of 24 people and their first names with all the images standing up. Each player selects a card of their choice from a separate pile of cards containing the same 24 images. The objective of the game is to be the first to determine which card one’s opponent has selected. Players alternate asking various yes-no questions to eliminate candidates, such as:</p>
<ul>
<li>Does your person wear a hat?</li>
<li>Does your person wear glasses?</li>
<li>Is your person female?</li>
</ul>
<p>The player will then eliminate candidates (based on the opponent’s response) by flipping those images down until only one is left.</p>
<p><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/guess-who-board.png" class="img-fluid"></p>
</section>
<section id="importing-necessary-libraries-and-loading-the-data" class="level2">
<h2 class="anchored" data-anchor-id="importing-necessary-libraries-and-loading-the-data">Importing necessary libraries and loading the data</h2>
<p>To begin, we import the necessary libraries.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> graphviz</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> re</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="im" style="color: #00769E;">from</span> ipywidgets <span class="im" style="color: #00769E;">import</span> GridspecLayout, HTML, VBox, HBox, Button, Label</span>
<span id="cb1-7"><span class="im" style="color: #00769E;">from</span> sklearn.tree <span class="im" style="color: #00769E;">import</span> DecisionTreeClassifier, export_graphviz</span></code></pre></div>
</div>
<p>Data describing the characters is loaded into a Pandas DataFrame, with the character names located in the final column. Each feature in the DataFrame represents a specific trait, where a value of 1 or 0 indicates the presence or absence of that trait for a particular character.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame({</span>
<span id="cb2-2">    <span class="co" style="color: #5E5E5E;"># hair style</span></span>
<span id="cb2-3">    <span class="st" style="color: #20794D;">'hair_partition'</span>: [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>], </span>
<span id="cb2-4">    <span class="st" style="color: #20794D;">'curly_hair'</span>:     [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-5">    <span class="st" style="color: #20794D;">'hat'</span>:            [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-6">    <span class="st" style="color: #20794D;">'bald'</span>:           [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-7">    <span class="st" style="color: #20794D;">'long_hair'</span>:      [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-8">    <span class="co" style="color: #5E5E5E;"># hair color</span></span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">'ginger_hair'</span>:    [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-10">    <span class="st" style="color: #20794D;">'white_hair'</span>:     [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-11">    <span class="st" style="color: #20794D;">'brown_hair'</span>:     [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-12">    <span class="st" style="color: #20794D;">'blond_hair'</span>:     [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-13">    <span class="st" style="color: #20794D;">'black_hair'</span>:     [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-14">    <span class="co" style="color: #5E5E5E;"># facial attributes</span></span>
<span id="cb2-15">    <span class="st" style="color: #20794D;">'big_mouth'</span>:      [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-16">    <span class="st" style="color: #20794D;">'big_nose'</span>:       [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-17">    <span class="st" style="color: #20794D;">'red_cheeks'</span>:     [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-18">    <span class="st" style="color: #20794D;">'blue_eyes'</span>:      [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-19">    <span class="st" style="color: #20794D;">'sad_looking'</span>:    [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-20">    <span class="co" style="color: #5E5E5E;"># facial hair</span></span>
<span id="cb2-21">    <span class="st" style="color: #20794D;">'facial_hair'</span>:    [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-22">    <span class="st" style="color: #20794D;">'moustache'</span>:      [<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-23">    <span class="st" style="color: #20794D;">'beard'</span>:          [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-24">    <span class="co" style="color: #5E5E5E;"># other</span></span>
<span id="cb2-25">    <span class="st" style="color: #20794D;">'glasses'</span>:        [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb2-26">    <span class="st" style="color: #20794D;">'earrings'</span>:      [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-27">    <span class="st" style="color: #20794D;">'female'</span>:         [<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">0</span>],</span>
<span id="cb2-28">    <span class="co" style="color: #5E5E5E;"># names</span></span>
<span id="cb2-29">    <span class="st" style="color: #20794D;">'name'</span>:           [<span class="st" style="color: #20794D;">'alex'</span>, <span class="st" style="color: #20794D;">'alfred'</span>, <span class="st" style="color: #20794D;">'anita'</span>, <span class="st" style="color: #20794D;">'anne'</span>, <span class="st" style="color: #20794D;">'bernard'</span>, <span class="st" style="color: #20794D;">'bill'</span>, <span class="st" style="color: #20794D;">'charles'</span>, <span class="st" style="color: #20794D;">'claire'</span>, </span>
<span id="cb2-30">                       <span class="st" style="color: #20794D;">'david'</span>, <span class="st" style="color: #20794D;">'eric'</span>, <span class="st" style="color: #20794D;">'frans'</span>, <span class="st" style="color: #20794D;">'george'</span>, <span class="st" style="color: #20794D;">'herman'</span>, <span class="st" style="color: #20794D;">'joe'</span>, <span class="st" style="color: #20794D;">'maria'</span>, <span class="st" style="color: #20794D;">'max'</span>, <span class="st" style="color: #20794D;">'paul'</span>, </span>
<span id="cb2-31">                       <span class="st" style="color: #20794D;">'peter'</span>, <span class="st" style="color: #20794D;">'philip'</span>, <span class="st" style="color: #20794D;">'richard'</span>, <span class="st" style="color: #20794D;">'robert'</span>, <span class="st" style="color: #20794D;">'sam'</span>, <span class="st" style="color: #20794D;">'susan'</span>, <span class="st" style="color: #20794D;">'tom'</span>]</span>
<span id="cb2-32">})</span></code></pre></div>
</div>
<p>Every trait is associated with a question. The following dictionary links each trait (or feature) to a valid yes-no question. We will use this dictionary to map feature names to questions.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">column_description <span class="op" style="color: #5E5E5E;">=</span> {</span>
<span id="cb3-2">    <span class="st" style="color: #20794D;">"hair_partition"</span>: <span class="st" style="color: #20794D;">"Does your character have a visible hair partition?"</span>,</span>
<span id="cb3-3">    <span class="st" style="color: #20794D;">"curly_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have curly hair?"</span>,</span>
<span id="cb3-4">    <span class="st" style="color: #20794D;">"hat"</span>: <span class="st" style="color: #20794D;">"Does your character wear a hat?"</span>,</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;">"bald"</span>: <span class="st" style="color: #20794D;">"Is your character bald?"</span>,</span>
<span id="cb3-6">    <span class="st" style="color: #20794D;">"long_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have long hair?"</span>,</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;">"ginger_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have ginger hair?"</span>,</span>
<span id="cb3-8">    <span class="st" style="color: #20794D;">"white_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have white hair?"</span>,</span>
<span id="cb3-9">    <span class="st" style="color: #20794D;">"brown_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have brown hair?"</span>,</span>
<span id="cb3-10">    <span class="st" style="color: #20794D;">"blond_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have blond hair?"</span>,</span>
<span id="cb3-11">    <span class="st" style="color: #20794D;">"black_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have black hair?"</span>,</span>
<span id="cb3-12">    <span class="st" style="color: #20794D;">"big_mouth"</span>: <span class="st" style="color: #20794D;">"Does your character have a big mouth?"</span>,</span>
<span id="cb3-13">    <span class="st" style="color: #20794D;">"big_nose"</span>: <span class="st" style="color: #20794D;">"Does your character have a big nose?"</span>,</span>
<span id="cb3-14">    <span class="st" style="color: #20794D;">"red_cheeks"</span>: <span class="st" style="color: #20794D;">"Does your character have red cheeks?"</span>,</span>
<span id="cb3-15">    <span class="st" style="color: #20794D;">"blue_eyes"</span>: <span class="st" style="color: #20794D;">"Does your character have blue eyes?"</span>,</span>
<span id="cb3-16">    <span class="st" style="color: #20794D;">"sad_looking"</span>: <span class="st" style="color: #20794D;">"Does your character look sad?"</span>,</span>
<span id="cb3-17">    <span class="st" style="color: #20794D;">"facial_hair"</span>: <span class="st" style="color: #20794D;">"Does your character have facial hair?"</span>,</span>
<span id="cb3-18">    <span class="st" style="color: #20794D;">"moustache"</span>: <span class="st" style="color: #20794D;">"Does your character have a moustache?"</span>,</span>
<span id="cb3-19">    <span class="st" style="color: #20794D;">"beard"</span>: <span class="st" style="color: #20794D;">"Does your character have a beard?"</span>,</span>
<span id="cb3-20">    <span class="st" style="color: #20794D;">"glasses"</span>: <span class="st" style="color: #20794D;">"Does your character wear glasses?"</span>,</span>
<span id="cb3-21">    <span class="st" style="color: #20794D;">"earrings"</span>: <span class="st" style="color: #20794D;">"Does your character wear earrings?"</span>,</span>
<span id="cb3-22">    <span class="st" style="color: #20794D;">"female"</span>: <span class="st" style="color: #20794D;">"Is your character female?"</span></span>
<span id="cb3-23">}</span></code></pre></div>
</div>
<p>I used the traits mentioned in <a href="https://chalkdustmagazine.com/blog/cracking-guess-board-game/">this blog post</a>. At the end of this post, I’ll suggest some more questions you could add.</p>
</section>
<section id="fitting-the-decision-tree" class="level2">
<h2 class="anchored" data-anchor-id="fitting-the-decision-tree">Fitting the decision tree</h2>
<p>Firstly, we select the features and target variable from the DataFrame.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">X <span class="op" style="color: #5E5E5E;">=</span> df.iloc[:, :<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span>
<span id="cb4-2">y <span class="op" style="color: #5E5E5E;">=</span> df.iloc[:, <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
</div>
<p>We create a list <code>feature_names</code> containing the names of all the features in the input dataset. We will use this when visualizing the decision tree.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">feature_names <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">list</span>(df.columns)[:<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
</div>
<p>Below we fit the decision tree classifier using the <code>DecisionTreeClassifier</code> class. We specify the criterion for splitting nodes as entropy. The default is gini but entropy yields a slightly more optimal tree in this case.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">clf <span class="op" style="color: #5E5E5E;">=</span> DecisionTreeClassifier(criterion <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"entropy"</span>)</span>
<span id="cb6-2">clf <span class="op" style="color: #5E5E5E;">=</span> clf.fit(X, y)</span></code></pre></div>
</div>
</section>
<section id="visualizing-the-decision-tree" class="level2">
<h2 class="anchored" data-anchor-id="visualizing-the-decision-tree">Visualizing the decision tree</h2>
<p>The depth of the tree tells us how many questions we need to ask at most. Ideally, you would want to do a binary search by splitting the number of possible characters in half with each question. By asking questions that split the number of remaining characters into two equal groups, you’d need only 4 or 5 questions at most.</p>
<p>Let’s see how we do with the set of questions we defined above.</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">clf.get_depth()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>6</code></pre>
</div>
</div>
<p>The tree has a depth of 6. This means we need to ask 6 questions at most to guess the opponent’s characters if we use this decision tree. Let’s see what the tree looks like.</p>
<p>If we plot the tree graphically using <code>sklearn.tree.plot_tree</code> the result is illegible. A better way is to use the Graphviz format. The <code>export_graphviz</code> function returns a DOT string which is the abstract language used by Graphviz to describe nodes, edges, graphs, subgraphs etc.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">dot_data <span class="op" style="color: #5E5E5E;">=</span> export_graphviz(clf, out_file<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">None</span>, feature_names<span class="op" style="color: #5E5E5E;">=</span>feature_names, </span>
<span id="cb9-2">    rotate<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, class_names<span class="op" style="color: #5E5E5E;">=</span>y, filled<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, rounded<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, </span>
<span id="cb9-3">    leaves_parallel<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, impurity<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, special_characters<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
</div>
<p>We can make the tree more compact by removing superfluous content from the nodes.</p>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">dot_data <span class="op" style="color: #5E5E5E;">=</span> re.sub(<span class="st" style="color: #20794D;">"=&lt;samples = .*class = "</span>, <span class="st" style="color: #20794D;">"=&lt;"</span>, dot_data)</span>
<span id="cb10-2">dot_data <span class="op" style="color: #5E5E5E;">=</span> re.sub(<span class="st" style="color: #20794D;">" &amp;le; 0.5.*&gt;, fillcolor"</span>, <span class="st" style="color: #20794D;">"&gt;, fillcolor"</span>, dot_data)</span>
<span id="cb10-3">dot_data <span class="op" style="color: #5E5E5E;">=</span> re.sub(<span class="st" style="color: #20794D;">'labeldistance.*headlabel="True"'</span>, <span class="st" style="color: #20794D;">'label="NO"'</span>, dot_data)</span>
<span id="cb10-4">dot_data <span class="op" style="color: #5E5E5E;">=</span> re.sub(<span class="st" style="color: #20794D;">'labeldistance.*headlabel="False"'</span>, <span class="st" style="color: #20794D;">'label="YES"'</span>, dot_data)</span>
<span id="cb10-5">dot_data <span class="op" style="color: #5E5E5E;">=</span> re.sub(<span class="st" style="color: #20794D;">'ranksep=.*,'</span>, <span class="st" style="color: #20794D;">'ranksep=0.02'</span>, dot_data)</span></code></pre></div>
</div>
<p>Finally we display the tree.</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">graph <span class="op" style="color: #5E5E5E;">=</span> graphviz.Source(dot_data)</span>
<span id="cb11-2">graph</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<p><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/index_files/figure-html/cell-11-output-1.svg" class="img-fluid"></p>
</div>
</div>
<p>We can see that most characters can be guessed in 4 or 5 moves. Only two characters need a 6th question.</p>
</section>
<section id="traversing-the-decision-tree" class="level2">
<h2 class="anchored" data-anchor-id="traversing-the-decision-tree">Traversing the decision tree</h2>
<p>We can traverse the decision tree programmatically using the <code>tree_</code> attribute of the trained <code>clf</code> object. The <code>tree_</code> attribute is an instance of the <code>sklearn.tree._tree.Tree</code> class, which represents the decision tree as a binary tree of nodes.</p>
<p>The <code>Tree</code> class has several attributes and methods that can be used to traverse the tree, including:</p>
<ul>
<li><code>node_count</code>: the total number of nodes in the tree.</li>
<li><code>feature</code>: an array of length <code>node_count</code> containing the feature index at each node, or -2 for leaf nodes.</li>
<li><code>threshold</code>: an array of length <code>node_count</code> containing the threshold value at each split node, or -2 for leaf nodes. In our case the threshold value will always be 0.5 because all our features are either 0 or 1.</li>
<li><code>value</code>: an array of shape (<code>node_count</code>, <code>n_outputs</code>, <code>n_classes</code>) containing the class distribution at each leaf node.</li>
<li><code>children_left</code>: an array of length <code>node_count</code> containing the index of the left child node for each split node, or -1 for leaf nodes.</li>
<li><code>children_right</code>: an array of length <code>node_count</code> containing the index of the right child node for each split node, or -1 for leaf nodes.</li>
</ul>
<p>To traverse the decision tree, we start at the root node (index 0) and recursively traverse the left or right child nodes depending on the feature value.</p>
<p>The following function traverses the tree and queries the user at each (non-leaf) node it encounters. It uses the <code>column_description</code> dictionary that we’ve defined above to match feature names to questions.</p>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;">def</span> play_game(node_id<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>):</span>
<span id="cb12-2">    <span class="cf" style="color: #003B4F;">if</span> clf.tree_.children_left[node_id] <span class="op" style="color: #5E5E5E;">==</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>:</span>
<span id="cb12-3">        <span class="co" style="color: #5E5E5E;"># leaf node</span></span>
<span id="cb12-4">        <span class="bu" style="color: null;">print</span>(<span class="ss" style="color: #20794D;">f"Your character is: </span><span class="sc" style="color: #5E5E5E;">{</span>clf<span class="sc" style="color: #5E5E5E;">.</span>classes_[clf.tree_.value[node_id].argmax()]<span class="sc" style="color: #5E5E5E;">.</span>capitalize()<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;">"</span>)</span>
<span id="cb12-5">    <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb12-6">        feature <span class="op" style="color: #5E5E5E;">=</span> clf.feature_names_in_[clf.tree_.feature[node_id]]</span>
<span id="cb12-7">        threshold <span class="op" style="color: #5E5E5E;">=</span> clf.tree_.threshold[node_id]</span>
<span id="cb12-8"></span>
<span id="cb12-9">        <span class="cf" style="color: #003B4F;">while</span> (ans :<span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">input</span>(<span class="ss" style="color: #20794D;">f"</span><span class="sc" style="color: #5E5E5E;">{</span>column_description[feature]<span class="sc" style="color: #5E5E5E;">}</span><span class="ss" style="color: #20794D;"> (Y/N): "</span>).lower()) <span class="kw" style="color: #003B4F;">not</span> <span class="kw" style="color: #003B4F;">in</span> [<span class="st" style="color: #20794D;">'y'</span>, <span class="st" style="color: #20794D;">'n'</span>]:</span>
<span id="cb12-10">            <span class="cf" style="color: #003B4F;">pass</span></span>
<span id="cb12-11">        </span>
<span id="cb12-12">        val <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span> <span class="cf" style="color: #003B4F;">if</span> ans <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">'n'</span> <span class="cf" style="color: #003B4F;">else</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb12-13">        <span class="cf" style="color: #003B4F;">if</span> val <span class="op" style="color: #5E5E5E;">&lt;=</span> threshold:</span>
<span id="cb12-14">            <span class="co" style="color: #5E5E5E;"># it's a 'no', so traverse left subtree</span></span>
<span id="cb12-15">            play_game(clf.tree_.children_left[node_id])</span>
<span id="cb12-16">        <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb12-17">            <span class="co" style="color: #5E5E5E;"># traverse right subtree</span></span>
<span id="cb12-18">            play_game(clf.tree_.children_right[node_id])</span></code></pre></div>
</div>
<p>By calling this function, we recursively traverse the decision tree starting from the root node (index 0), checking the feature value of the input instance at each split node and following the left or right child node accordingly, until a leaf node is reached. At the leaf node, the function prints the predicted class label by finding the index of the largest class probability in the value array of the leaf node, which corresponds to the predicted class label (the name of the character).</p>
</section>
<section id="creating-a-fancy-gui-with-ipywidgets" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="creating-a-fancy-gui-with-ipywidgets">Creating a fancy GUI with ipywidgets</h2>
<p>We can create a way fancier GUI using Jupyter widgets, and render it using Voila to create an interactive web app. We’ll display the pictures of the characters that we will flip down while traversing the tree. The images were taken from <a href="https://guesswhocharacters.info/">this website</a>.</p>
<p>We use the following features of the <code>tree_</code> attribute.</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">children_left <span class="op" style="color: #5E5E5E;">=</span> clf.tree_.children_left</span>
<span id="cb13-2">children_right <span class="op" style="color: #5E5E5E;">=</span> clf.tree_.children_right</span>
<span id="cb13-3">feature <span class="op" style="color: #5E5E5E;">=</span> clf.tree_.feature</span>
<span id="cb13-4">value <span class="op" style="color: #5E5E5E;">=</span> clf.tree_.value</span></code></pre></div>
</div>
<p>The next part sets up the grid using <code>GridspecLayout</code> with 3 rows and 8 columns. Each cell in the grid contains an HTML element with an image of a character loaded from the website mentioned above.</p>
<p>The code also creates a label and three buttons using the <code>Label</code> and <code>Button</code> classes, and arranges them in a horizontal box (<code>HBox</code>). The label displays the current question or the final answer, and the buttons allow the user to answer yes or no to a question, and restart the game. These widgets are then arranged in a vertical box (<code>VBox</code>) along with the grid.</p>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">grid <span class="op" style="color: #5E5E5E;">=</span> GridspecLayout(<span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">8</span>)</span>
<span id="cb14-2">grid.width <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"1120"</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">3</span>):</span>
<span id="cb14-5">    <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">8</span>):</span>
<span id="cb14-6">        grid[i, j] <span class="op" style="color: #5E5E5E;">=</span> HTML(value<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"&lt;img src='https://guesswhocharacters.info/imgs/</span><span class="sc" style="color: #5E5E5E;">{}</span><span class="st" style="color: #20794D;">.jpeg' width=130 height=190&gt;"</span>.<span class="bu" style="color: null;">format</span>(<span class="bu" style="color: null;">str</span>(df.name[i<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">8</span><span class="op" style="color: #5E5E5E;">+</span>j])))</span>
<span id="cb14-7"></span>
<span id="cb14-8">label <span class="op" style="color: #5E5E5E;">=</span> Label(value<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"Put the questions and answer here"</span>)</span>
<span id="cb14-9">button_yes <span class="op" style="color: #5E5E5E;">=</span> Button(description<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"Yes"</span>)</span>
<span id="cb14-10">button_no <span class="op" style="color: #5E5E5E;">=</span> Button(description<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"No"</span>)</span>
<span id="cb14-11">button_play_again <span class="op" style="color: #5E5E5E;">=</span> Button(description<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"Play again"</span>)</span>
<span id="cb14-12">hbox <span class="op" style="color: #5E5E5E;">=</span> HBox([label, button_yes, button_no, button_play_again])</span>
<span id="cb14-13">vbox <span class="op" style="color: #5E5E5E;">=</span> VBox([grid, hbox])</span></code></pre></div>
</div>
<p>The root node of the tree will have an id of 0 which is where we start out search.</p>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;"># Start at root</span></span>
<span id="cb15-2">node_id <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span></code></pre></div>
</div>
<p>The functions below are for updating the GUI based on user interactions:</p>
<ul>
<li><p><code>update_gui()</code> updates the label and buttons based on the current node in a decision tree model used for the game. If the current node is a leaf node, meaning it represents a final answer, the label displays the character’s name and the “Yes” and “No” buttons are hidden while the “Play Again” button is shown. If the current node is a branch node, the label displays the current question, and the “Yes” and “No” buttons are shown while the “Play Again” button is hidden.</p></li>
<li><p><code>show_all_cards()</code> makes all cards visible in the grid.</p></li>
<li><p><code>hide_cards(attribute, val)</code> hides cards in the grid that have a particular attribute with a given value.</p></li>
<li><p><code>on_button_yes_clicked(b)</code>, <code>on_button_no_clicked(b)</code>, and <code>on_button_play_again_clicked(b)</code> are callback functions that are executed when the “Yes”, “No”, or “Play Again” button is clicked, respectively. These functions update the <code>node_id</code> variable that tracks the current node in the decision tree model and call <code>update_gui()</code> to update the GUI based on the new node.</p></li>
</ul>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;">def</span> update_gui():</span>
<span id="cb16-2">    <span class="cf" style="color: #003B4F;">if</span> children_left[node_id] <span class="op" style="color: #5E5E5E;">==</span> children_right[node_id]:</span>
<span id="cb16-3">        label.value <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"You character is "</span> <span class="op" style="color: #5E5E5E;">+</span> y[np.argmax(value[node_id])].capitalize()</span>
<span id="cb16-4">        button_yes.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'none'</span></span>
<span id="cb16-5">        button_no.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'none'</span></span>
<span id="cb16-6">        button_play_again.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'block'</span></span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb16-8">        label.value <span class="op" style="color: #5E5E5E;">=</span> column_description[df.columns[feature[node_id]]]</span>
<span id="cb16-9">        button_yes.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'block'</span></span>
<span id="cb16-10">        button_no.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'block'</span></span>
<span id="cb16-11">        button_play_again.layout.display <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'none'</span></span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="kw" style="color: #003B4F;">def</span> show_all_cards():</span>
<span id="cb16-14">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">3</span>):</span>
<span id="cb16-15">        <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">8</span>):</span>
<span id="cb16-16">            grid[i, j].layout.visibility <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'visible'</span></span>
<span id="cb16-17"></span>
<span id="cb16-18"><span class="kw" style="color: #003B4F;">def</span> hide_cards(attribute, val):</span>
<span id="cb16-19">    <span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">3</span>):</span>
<span id="cb16-20">        <span class="cf" style="color: #003B4F;">for</span> j <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">8</span>):</span>
<span id="cb16-21">            <span class="cf" style="color: #003B4F;">if</span> df[attribute][i<span class="op" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">8</span><span class="op" style="color: #5E5E5E;">+</span>j] <span class="op" style="color: #5E5E5E;">==</span> val:</span>
<span id="cb16-22">                grid[i, j].layout.visibility <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">'hidden'</span></span>
<span id="cb16-23">        </span>
<span id="cb16-24"><span class="kw" style="color: #003B4F;">def</span> on_button_yes_clicked(b):</span>
<span id="cb16-25">    <span class="kw" style="color: #003B4F;">global</span> node_id</span>
<span id="cb16-26">    hide_cards(df.columns[feature[node_id]], <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb16-27">    node_id <span class="op" style="color: #5E5E5E;">=</span> children_right[node_id]</span>
<span id="cb16-28">    update_gui()</span>
<span id="cb16-29"></span>
<span id="cb16-30"><span class="kw" style="color: #003B4F;">def</span> on_button_no_clicked(b):</span>
<span id="cb16-31">    <span class="kw" style="color: #003B4F;">global</span> node_id</span>
<span id="cb16-32">    hide_cards(df.columns[feature[node_id]], <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb16-33">    node_id <span class="op" style="color: #5E5E5E;">=</span> children_left[node_id]</span>
<span id="cb16-34">    update_gui()</span>
<span id="cb16-35"></span>
<span id="cb16-36"><span class="kw" style="color: #003B4F;">def</span> on_button_play_again_clicked(b):</span>
<span id="cb16-37">    <span class="kw" style="color: #003B4F;">global</span> node_id</span>
<span id="cb16-38">    show_all_cards()</span>
<span id="cb16-39">    node_id <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb16-40">    update_gui()</span>
<span id="cb16-41">    </span>
<span id="cb16-42">button_yes.on_click(on_button_yes_clicked)</span>
<span id="cb16-43">button_no.on_click(on_button_no_clicked)</span>
<span id="cb16-44">button_play_again.on_click(on_button_play_again_clicked)</span>
<span id="cb16-45"></span>
<span id="cb16-46">update_gui()</span></code></pre></div>
</div>
<p>Finally, the GUI is displayed using the <code>display()</code> function.</p>
<div class="cell page-columns page-full" data-execution_count="16">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">display(vbox)</span></code></pre></div>
<div class="cell-output cell-output-display column-page">
<script type="application/vnd.jupyter.widget-view+json">
{"model_id":"511fc15ec4fa4276bf3cbb837c7bcf26","version_major":2,"version_minor":0}
</script>
</div>
</div>
<p>Use one of the following links to play with an interactive version:</p>
<p><a target="_blank" href="https://mybinder.org/v2/gh/afvanwoudenberg/guess-who/main?urlpath=%2Fvoila%2Frender%2FGuess%20Who.ipynb"><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/https:/mybinder.org/badge_logo.svg" class="img-fluid" alt="Binder"></a> <a target="_blank" href="https://kaggle.com/kernels/welcome?src=https://github.com/afvanwoudenberg/guess-who/blob/main/Guess%20Who.ipynb"><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/https:/kaggle.com/static/images/open-in-kaggle.svg" class="img-fluid" alt="Kaggle"></a> <a target="_blank" href="https://colab.research.google.com/github/afvanwoudenberg/guess-who/blob/main/Guess%20Who.ipynb"><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/https:/colab.research.google.com/assets/colab-badge.svg" class="img-fluid" alt="Colab"></a> <a target="_blank" href="https://github.com/afvanwoudenberg/guess-who"><img src="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/https:/shields.io/badge/-View%20on%20GitHub-grey.svg?logo=github&amp;style=flat&amp;logoColor=white&amp;labelColor=black" class="img-fluid" alt="GitHub"></a></p>
</section>
<section id="ok-cool-but-how-do-i-win-at-guess-who" class="level2">
<h2 class="anchored" data-anchor-id="ok-cool-but-how-do-i-win-at-guess-who">OK, cool, but how do I win at Guess Who?</h2>
<p>Now you know how to fit and traverse a decision tree. Let’s see how we can improve the decision tree.</p>
<p>Our decision tree above has a depth of 6 which seems decent, but as I mentioned, we can do better. In order to guess our opponent’s character with the least number of attempts, we want to pose questions that halve the number of potential characters each turn. By employing this tactic, we can quickly narrow down the options from 24 people to 12, then 6, 3, and eventually just 1 or 2 remaining. This approach enables us to guess the character within a maximum of 4 or 5 turns.</p>
<p>The game has deliberately been designed so that obvious traits, like if the person is female, or if the person has a moustache, applies to 5 characters at most. This makes even splits challenging. Two strategies that are mentioned <a href="https://www.geekyhobbies.com/how-to-win-guess-who-within-six-turns/">in</a> <a href="https://guiguilegui.wordpress.com/2014/09/22/optimal-strategies-for-guess-who/">various</a> <a href="https://www.youtube.com/watch?v=FRlbNOno5VA">places</a> are the <em>letter strategy</em> and the <em>compound questions strategy</em>.</p>
<section id="letter-strategy" class="level3">
<h3 class="anchored" data-anchor-id="letter-strategy">Letter strategy</h3>
<p>The <em>letter strategy</em> is a simple yet effective approach. It works by asking questions that revolve around the starting letter of each character’s name and focusing on the middle starting letter of the remaining characters. For instance, asking as a first question if the person’s name starts with the letters A-G would eliminate half the characters. If the person’s name does indeed start with one of the letters A-G, a follow-up question might be whether the person’s name starts with the letters A-B, and so on.</p>
</section>
<section id="compound-questions-strategy" class="level3">
<h3 class="anchored" data-anchor-id="compound-questions-strategy">Compound questions strategy</h3>
<p>Another approach is the <em>compound questions strategy</em>. Rather than asking about a single characteristic at a time, you can ask about two or more characteristics simultaneously. For example, instead of asking “Does your person have white hair?”, you could ask “Does your person have white hair OR black hair?”. The facial hair trait used above is an example of such a compound question as it asks whether the character has a beard OR a moustache.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>We have seen how a fitted decision tree can be traversed iteratively.</p>
<p>By adding new questions based on the letter and compound questions strategies to the DataFrame above you should be able to reduce the depth of the decision tree to five.</p>
<p>So there you have it, you now have all the tools to dominate (and drain all the fun out of) your Guess Who games.</p>
<p>Good luck and happy guessing!</p>


</section>

 ]]></description>
  <category>machine learning</category>
  <category>decision trees</category>
  <category>games</category>
  <category>python</category>
  <category>sklearn</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/index.html</guid>
  <pubDate>Mon, 03 Jan 2022 23:00:00 GMT</pubDate>
  <media:content url="https://www.aswinvanwoudenberg.com/posts/how-to-traverse-a-decision-tree-and-win-at-guess-who/guess-who.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Icosian Game</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/icosian-game/index.html</link>
  <description><![CDATA[ 




<p>The Irish mathematician <a href="https://en.wikipedia.org/wiki/William_Rowan_Hamilton">William Rowan Hamilton</a> is probably best known for discovering <a href="https://en.wikipedia.org/wiki/Quaternion">quaternions</a>. He is also the inventor of the <a href="https://en.wikipedia.org/wiki/Icosian_game">Icosian game</a>.</p>
<p>In this blog post I’ll describe the game and show some Prolog code for solving it.</p>
<section id="how-to-play-the-icosian-game" class="level2">
<h2 class="anchored" data-anchor-id="how-to-play-the-icosian-game">How to play the Icosian game</h2>
<p>The game’s objective is to find a path around a <a href="https://en.wikipedia.org/wiki/Regular_dodecahedron">dodecahedron</a> such that every vertex is visited once, no edge is visited multiple times, and the path ends in de same vertex it started from. Instead of using a 3d dodecahedron, the game was distributed as a pegboard with holes at the vertices of the 2d dodecahedral graph.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.aswinvanwoudenberg.com/posts/icosian-game/icosian.jpg" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">One of the few remaining copies (from the collection of <a href="https://www.puzzlemuseum.com/month/picm02/200207icosian.htm">the puzzle museum</a>)</figcaption><p></p>
</figure>
</div>
<p>The game was meant to be played by two people. The first player would set up the challenge by placing the first five pegs in any five consecutive holes and then the second player would be required to place the remaining fifteen pegs consecutively in such a way that the succession would be cyclical.</p>
</section>
<section id="some-graph-theory" class="level2">
<h2 class="anchored" data-anchor-id="some-graph-theory">Some graph theory</h2>
<p>In graph theory, a path that visits every vertex of a graph once is now known as a Hamiltonian path. A path that visits every vertex once <em>and</em> that ends in the same vertex as it started off from is called a Hamiltonian cycle. So playing this game is essentially searching for a Hamiltonian cycle in the dodecahedral graph.</p>
<p><img src="https://www.aswinvanwoudenberg.com/posts/icosian-game/icosian_graph.png" class="img-fluid" width="500"></p>
</section>
<section id="solving-this-game-using-prolog" class="level2">
<h2 class="anchored" data-anchor-id="solving-this-game-using-prolog">Solving this game using Prolog</h2>
<p>The Icosian game was never a commercial success, probably because it’s too easy. I wrote some Prolog code to solve this game and explore possible solutions.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>icosian.pl</strong></pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">% A Prolog solver for the Icosian game</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">% https://en.wikipedia.org/wiki/Icosian_game</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">icosian_puzzle_edges([</span>
<span id="cb1-5">    (b<span class="kw" style="color: #003B4F;">,</span>c), (b<span class="kw" style="color: #003B4F;">,</span>g), (b<span class="kw" style="color: #003B4F;">,</span>z), (c<span class="kw" style="color: #003B4F;">,</span>d), (c<span class="kw" style="color: #003B4F;">,</span>p), (d<span class="kw" style="color: #003B4F;">,</span>f), (d<span class="kw" style="color: #003B4F;">,</span>m), (f<span class="kw" style="color: #003B4F;">,</span>g), (f<span class="kw" style="color: #003B4F;">,</span>k), (g<span class="kw" style="color: #003B4F;">,</span>h), </span>
<span id="cb1-6">    (h<span class="kw" style="color: #003B4F;">,</span>j), (h<span class="kw" style="color: #003B4F;">,</span>x), (j<span class="kw" style="color: #003B4F;">,</span>k), (j<span class="kw" style="color: #003B4F;">,</span>v), (k<span class="kw" style="color: #003B4F;">,</span>l), (l<span class="kw" style="color: #003B4F;">,</span>t), (l<span class="kw" style="color: #003B4F;">,</span>m), (m<span class="kw" style="color: #003B4F;">,</span>n), (n<span class="kw" style="color: #003B4F;">,</span>p), (n<span class="kw" style="color: #003B4F;">,</span>s), </span>
<span id="cb1-7">    (p<span class="kw" style="color: #003B4F;">,</span>q), (q<span class="kw" style="color: #003B4F;">,</span>z), (q<span class="kw" style="color: #003B4F;">,</span>r), (r<span class="kw" style="color: #003B4F;">,</span>s), (r<span class="kw" style="color: #003B4F;">,</span>w), (s<span class="kw" style="color: #003B4F;">,</span>t), (t<span class="kw" style="color: #003B4F;">,</span>v), (v<span class="kw" style="color: #003B4F;">,</span>w), (w<span class="kw" style="color: #003B4F;">,</span>x), (x<span class="kw" style="color: #003B4F;">,</span>z)</span>
<span id="cb1-8">])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">connected(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span>) <span class="kw" style="color: #003B4F;">:-</span> member((<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Adj</span>)<span class="kw" style="color: #003B4F;">;</span> member((<span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">P</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Adj</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">graph_order(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">N</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-13">    findall(<span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span>connected(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">B0</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-14">    sort(<span class="dt" style="color: #AD0000;">B0</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">B</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-15">    length(<span class="dt" style="color: #AD0000;">B</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">N</span>)<span class="kw" style="color: #003B4F;">.</span> </span>
<span id="cb1-16"></span>
<span id="cb1-17">hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Start</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">TourRest</span>]) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-18">    graph_order(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">N</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-19">    append([[<span class="dt" style="color: #AD0000;">Start</span>],<span class="dt" style="color: #AD0000;">MidTour</span>,[<span class="dt" style="color: #AD0000;">Start</span>]]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Start</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">TourRest</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-20">    length([<span class="dt" style="color: #AD0000;">Start</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">MidTour</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">N</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-21">    hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Start</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">MidTour</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Start</span>])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-22"></span>
<span id="cb1-23">hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Start</span><span class="kw" style="color: #003B4F;">,</span>[]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">LastVisited</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">_</span>]) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-24">    connected(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">LastVisited</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Start</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-25">hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Start</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Head</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">Tail</span>]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VisitedHead</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">VisitedTail</span>]) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-26">    connected(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">VisitedHead</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Head</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-27">    not(member(<span class="dt" style="color: #AD0000;">Head</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VisitedHead</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">VisitedTail</span>]))<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-28">    hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Start</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tail</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Head</span>,<span class="dt" style="color: #AD0000;">VisitedHead</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">VisitedTail</span>])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-29"></span>
<span id="cb1-30">print_icosian_puzzle <span class="kw" style="color: #003B4F;">:-</span> print_icosian_solution([])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-31"></span>
<span id="cb1-32">edge_in_tour(<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-33">    append([<span class="dt" style="color: #AD0000;">_</span>,[<span class="dt" style="color: #AD0000;">P</span>,<span class="dt" style="color: #AD0000;">Q</span>],<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">;</span></span>
<span id="cb1-34">    append([<span class="dt" style="color: #AD0000;">_</span>,[<span class="dt" style="color: #AD0000;">Q</span>,<span class="dt" style="color: #AD0000;">P</span>],<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-35"></span>
<span id="cb1-36">format_edge(<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Atom</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Out</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-37">    edge_in_tour(<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-38">    format(<span class="dt" style="color: #AD0000;">atom</span>(<span class="dt" style="color: #AD0000;">Out</span>)<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\</span><span class="er" style="color: #AD0000;">e</span><span class="st" style="color: #20794D;">[31m~</span><span class="er" style="color: #AD0000;">w</span><span class="ch" style="color: #20794D;">\</span><span class="er" style="color: #AD0000;">e</span><span class="st" style="color: #20794D;">[0m'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Atom</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="kw" style="color: #003B4F;">!.</span></span>
<span id="cb1-39">format_edge(<span class="dt" style="color: #AD0000;">_P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_Tour</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Atom</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Atom</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-40"></span>
<span id="cb1-41">print_icosian_solution(<span class="dt" style="color: #AD0000;">Tour</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-42">    findall(<span class="dt" style="color: #AD0000;">F</span><span class="kw" style="color: #003B4F;">,</span>(member((<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">A</span>)<span class="kw" style="color: #003B4F;">,</span>[</span>
<span id="cb1-43">        (b<span class="kw" style="color: #003B4F;">,</span>c<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'-'</span>), (b<span class="kw" style="color: #003B4F;">,</span>g<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (b<span class="kw" style="color: #003B4F;">,</span>z<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (c<span class="kw" style="color: #003B4F;">,</span>d<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (c<span class="kw" style="color: #003B4F;">,</span>p<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), </span>
<span id="cb1-44">        (d<span class="kw" style="color: #003B4F;">,</span>f<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (d<span class="kw" style="color: #003B4F;">,</span>m<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (f<span class="kw" style="color: #003B4F;">,</span>g<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (f<span class="kw" style="color: #003B4F;">,</span>k<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'|'</span>), (g<span class="kw" style="color: #003B4F;">,</span>h<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>),</span>
<span id="cb1-45">        (h<span class="kw" style="color: #003B4F;">,</span>j<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (h<span class="kw" style="color: #003B4F;">,</span>x<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (j<span class="kw" style="color: #003B4F;">,</span>k<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (j<span class="kw" style="color: #003B4F;">,</span>v<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (k<span class="kw" style="color: #003B4F;">,</span>l<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>),</span>
<span id="cb1-46">        (l<span class="kw" style="color: #003B4F;">,</span>t<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (l<span class="kw" style="color: #003B4F;">,</span>m<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (m<span class="kw" style="color: #003B4F;">,</span>n<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (n<span class="kw" style="color: #003B4F;">,</span>p<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (n<span class="kw" style="color: #003B4F;">,</span>s<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'---'</span>),</span>
<span id="cb1-47">        (p<span class="kw" style="color: #003B4F;">,</span>q<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (q<span class="kw" style="color: #003B4F;">,</span>z<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (q<span class="kw" style="color: #003B4F;">,</span>r<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'|'</span>), (r<span class="kw" style="color: #003B4F;">,</span>s<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (r<span class="kw" style="color: #003B4F;">,</span>w<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>),</span>
<span id="cb1-48">        (s<span class="kw" style="color: #003B4F;">,</span>t<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>), (t<span class="kw" style="color: #003B4F;">,</span>v<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'-------'</span>), (v<span class="kw" style="color: #003B4F;">,</span>w<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="ch" style="color: #20794D;">\\</span><span class="st" style="color: #20794D;">'</span>), (w<span class="kw" style="color: #003B4F;">,</span>x<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'---'</span>), (x<span class="kw" style="color: #003B4F;">,</span>z<span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'/'</span>)</span>
<span id="cb1-49">    ])<span class="kw" style="color: #003B4F;">,</span>format_edge(<span class="dt" style="color: #AD0000;">P</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Q</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">F</span>))<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">BC</span>,<span class="dt" style="color: #AD0000;">BG</span>,<span class="dt" style="color: #AD0000;">BZ</span>,<span class="dt" style="color: #AD0000;">CD</span>,<span class="dt" style="color: #AD0000;">CP</span>,<span class="dt" style="color: #AD0000;">DF</span>,<span class="dt" style="color: #AD0000;">DM</span>,<span class="dt" style="color: #AD0000;">FG</span>,<span class="dt" style="color: #AD0000;">FK</span>,<span class="dt" style="color: #AD0000;">GH</span>,</span>
<span id="cb1-50">        <span class="dt" style="color: #AD0000;">HJ</span>,<span class="dt" style="color: #AD0000;">HX</span>,<span class="dt" style="color: #AD0000;">JK</span>,<span class="dt" style="color: #AD0000;">JV</span>,<span class="dt" style="color: #AD0000;">KL</span>,<span class="dt" style="color: #AD0000;">LT</span>,<span class="dt" style="color: #AD0000;">LM</span>,<span class="dt" style="color: #AD0000;">MN</span>,<span class="dt" style="color: #AD0000;">NP</span>,<span class="dt" style="color: #AD0000;">NS</span>,<span class="dt" style="color: #AD0000;">PQ</span>,<span class="dt" style="color: #AD0000;">QZ</span>,<span class="dt" style="color: #AD0000;">QR</span>,<span class="dt" style="color: #AD0000;">RS</span>,<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">ST</span>,<span class="dt" style="color: #AD0000;">TV</span>,<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">WX</span>,<span class="dt" style="color: #AD0000;">XZ</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-51">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">            R</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-52">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">           </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">QR</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-53">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">          </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">QR</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-54">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">         </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w  </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w  </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">QR</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-55">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">        </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   Q   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-56">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">       </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">QZ</span>,<span class="dt" style="color: #AD0000;">PQ</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-57">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">      </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">QZ</span>,<span class="dt" style="color: #AD0000;">PQ</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-58">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">     </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   Z     P   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-59">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">    </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">XZ</span>,<span class="dt" style="color: #AD0000;">BZ</span>,<span class="dt" style="color: #AD0000;">CP</span>,<span class="dt" style="color: #AD0000;">NP</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-60">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   B</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">wC   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">XZ</span>,<span class="dt" style="color: #AD0000;">BC</span>,<span class="dt" style="color: #AD0000;">NP</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-61">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">  </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">XZ</span>,<span class="dt" style="color: #AD0000;">BG</span>,<span class="dt" style="color: #AD0000;">CD</span>,<span class="dt" style="color: #AD0000;">NP</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-62">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;"> </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   G     D   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">RW</span>,<span class="dt" style="color: #AD0000;">XZ</span>,<span class="dt" style="color: #AD0000;">NP</span>,<span class="dt" style="color: #AD0000;">RS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-63">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">W</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">wX   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   N</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">wS</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">WX</span>,<span class="dt" style="color: #AD0000;">GH</span>,<span class="dt" style="color: #AD0000;">FG</span>,<span class="dt" style="color: #AD0000;">DF</span>,<span class="dt" style="color: #AD0000;">DM</span>,<span class="dt" style="color: #AD0000;">NS</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-64">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;"> </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">HX</span>,<span class="dt" style="color: #AD0000;">GH</span>,<span class="dt" style="color: #AD0000;">FG</span>,<span class="dt" style="color: #AD0000;">DF</span>,<span class="dt" style="color: #AD0000;">DM</span>,<span class="dt" style="color: #AD0000;">MN</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-65">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">  </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   H     F     M   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-66">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w    </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w    </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">HJ</span>,<span class="dt" style="color: #AD0000;">FK</span>,<span class="dt" style="color: #AD0000;">LM</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-67">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">    </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   K   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">HJ</span>,<span class="dt" style="color: #AD0000;">LM</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-68">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">     </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">HJ</span>,<span class="dt" style="color: #AD0000;">JK</span>,<span class="dt" style="color: #AD0000;">KL</span>,<span class="dt" style="color: #AD0000;">LM</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-69">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">      </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w   J   L   </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-70">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">       </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w     </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w </span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">w</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">VW</span>,<span class="dt" style="color: #AD0000;">JV</span>,<span class="dt" style="color: #AD0000;">LT</span>,<span class="dt" style="color: #AD0000;">ST</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-71">    format(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">        V</span><span class="st" style="color: #20794D;">~</span><span class="er" style="color: #AD0000;">wT</span><span class="st" style="color: #20794D;">'</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">TV</span>])<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-72"></span>
<span id="cb1-73">solve_icosian_puzzle <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-74">    icosian_puzzle_edges(<span class="dt" style="color: #AD0000;">Adj</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-75">    hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-76">    print_icosian_solution(<span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
</div>
<p>The <code>icosian_puzzle_edges/1</code> predicate defines the graph by specifying a list of edges between vertices which is used by the <code>connected/3</code> predicate which checks whether there is an edge between two vertices.</p>
<p>The <code>hamiltonian_cycle/2</code> predicate defines the main algorithm for finding a Hamiltonian cycle on the graph, given a starting vertex. After determining the number of vertices in the graph, it recursively tries to find a cycle that visits each vertex exactly once.</p>
<p>The <code>print_icosian_solution/1</code> predicate prints out the solution to the Icosian game, highlighting the edges in the Hamiltonian cycle found by the <code>hamiltonian_cycle/2</code> predicate.</p>
<p>You can find a copy of this code as a GitHub gist <a href="https://gist.github.com/afvanwoudenberg/06b7b3d115faa95a4332e32e5eb2988f">here</a>.</p>
</section>
<section id="how-to-use-this-code" class="level2">
<h2 class="anchored" data-anchor-id="how-to-use-this-code">How to use this code</h2>
<p>To use this program, open the <code>icosian.pl</code> file in your preferred Prolog interpreter (I always use <a href="https://www.swi-prolog.org/">SWI-Prolog</a>). Entering <code>solve_icosian_puzzle.</code> and pressing ; repeatedly will yield possible solutions.</p>
<p><img src="https://www.aswinvanwoudenberg.com/posts/icosian-game/icosian.gif" class="img-fluid"></p>
<p>Suppose you want to explore how the cycle that starts with the vertices Q, R, S, N, P could be continued, you would enter:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb2-1">icosian_puzzle_edges(<span class="dt" style="color: #AD0000;">Adj</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">Tour</span> <span class="kw" style="color: #003B4F;">=</span> [q,r,s,n,p<span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">Rest</span>]<span class="kw" style="color: #003B4F;">,</span> hamiltonian_cycle(<span class="dt" style="color: #AD0000;">Adj</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">,</span> print_icosian_solution(<span class="dt" style="color: #AD0000;">Tour</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<p>This game might remind you of the <a href="https://en.wikipedia.org/wiki/Travelling_salesman_problem">Travelling Salesman Problem</a> (TSP). Finding a Hamiltonian cycle can be considered a special case of the TSP, namely, one where each pair of vertices with an edge between them has distance 1, while vertex pairs without an edge between them are separated by a distance of infinity.</p>


</section>

 ]]></description>
  <category>programming</category>
  <category>prolog</category>
  <category>puzzles</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/icosian-game/index.html</guid>
  <pubDate>Thu, 23 Apr 2020 22:00:00 GMT</pubDate>
  <media:content url="https://www.puzzlemuseum.com/month/picm02/200207icosian.htm" medium="image"/>
</item>
<item>
  <title>Skyline Puzzle</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/skyline-puzzle/index.html</link>
  <description><![CDATA[ 




<p>A coworker of mine recently introduced me to this puzzle:</p>
<p><img src="https://www.aswinvanwoudenberg.com/posts/skyline-puzzle/pieces.jpg" class="img-fluid"></p>
<p>The puzzle is called <em>Skyline</em> and it’s a packing puzzle. The objective is to place the metal rod in one of the holes in the base and place the nine wooden pieces around it. It was designed by <a href="http://www.constantin-jean-clau.de/">Jean Claude Constantin</a>.</p>
<p>When solved, the puzzle looks something like this:</p>
<p><img src="https://www.aswinvanwoudenberg.com/posts/skyline-puzzle/skyline.jpg" class="img-fluid"></p>
<p>In this blog post I present some Prolog code to generate all solutions for each rod position.</p>
<section id="solving-this-puzzle-using-prolog" class="level2">
<h2 class="anchored" data-anchor-id="solving-this-puzzle-using-prolog">Solving this puzzle using Prolog</h2>
<p>It’s a breeze to program a Skyline solver using Prolog’s built-in backtracking mechanism.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>skyline.pl</strong></pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">% A Prolog solver for the Skyline puzzle</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">% http://www.constantin-jean-clau.de/</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">print_solution(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span>) <span class="kw" style="color: #003B4F;">:-</span> solve(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span> print_board(<span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-5"></span>
<span id="cb1-6">pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>) <span class="kw" style="color: #003B4F;">:-</span> member(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>])<span class="kw" style="color: #003B4F;">,</span> member(<span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">board(<span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span> findall(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">,</span>pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">solve(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-11">    board(<span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-12">    member(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;"> </span><span class="st" style="color: #20794D;">'</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-13">    solve(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span>[])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-14"></span>
<span id="cb1-15">solve(<span class="dv" style="color: #AD0000;">7</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">7</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>) <span class="kw" style="color: #003B4F;">:-</span> <span class="kw" style="color: #003B4F;">!.</span></span>
<span id="cb1-16">solve(<span class="dv" style="color: #AD0000;">8</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-17">    <span class="dt" style="color: #AD0000;">Yn</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">Y</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-18">    solve(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Yn</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="kw" style="color: #003B4F;">!.</span></span>
<span id="cb1-19">solve(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-20">    member(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">V</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-21">    <span class="dt" style="color: #AD0000;">nonvar</span>(<span class="dt" style="color: #AD0000;">V</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-22">    <span class="dt" style="color: #AD0000;">Xn</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">X</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-23">    solve(<span class="dt" style="color: #AD0000;">Xn</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-24">solve(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-25">    member(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">V</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-26">    <span class="dt" style="color: #AD0000;">var</span>(<span class="dt" style="color: #AD0000;">V</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-27">    member(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span>[i,g,h,f,e,d,a,c,b])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-28">    not(member(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Placed</span>))<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-29">    piece(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Locs</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-30">    place_piece(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Locs</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-31">    <span class="dt" style="color: #AD0000;">Xn</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">X</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-32">    solve(<span class="dt" style="color: #AD0000;">Xn</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Piece</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">Placed</span>])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-33"></span>
<span id="cb1-34">print_board(<span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-35">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'+-------+'</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-36">    findall(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span>(member(<span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>])<span class="kw" style="color: #003B4F;">,</span>print_line(<span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>))<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-37">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'+-------+'</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-38"></span>
<span id="cb1-39">print_line(<span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-40">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'|'</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-41">    findall(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span>(member(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">7</span>])<span class="kw" style="color: #003B4F;">,</span>print_piece(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>))<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-42">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'|'</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-43">    <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-44"></span>
<span id="cb1-45">print_piece(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-46">    member(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">P</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-47">    not(<span class="dt" style="color: #AD0000;">var</span>(<span class="dt" style="color: #AD0000;">P</span>))<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-48">    <span class="fu" style="color: #4758AB;">write</span>(<span class="dt" style="color: #AD0000;">P</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="kw" style="color: #003B4F;">!.</span></span>
<span id="cb1-49">print_piece(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>) <span class="kw" style="color: #003B4F;">:-</span> </span>
<span id="cb1-50">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">_</span><span class="st" style="color: #20794D;">'</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-51"></span>
<span id="cb1-52">place_piece(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span>[]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-53">place_piece(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">X0</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y0</span><span class="kw" style="color: #003B4F;">,</span>[(<span class="dt" style="color: #AD0000;">Xd</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Yd</span>)<span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">Locs</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-54">    <span class="dt" style="color: #AD0000;">X</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">X0</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dt" style="color: #AD0000;">Xd</span><span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">X</span> <span class="dt" style="color: #AD0000;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">X</span> <span class="dt" style="color: #AD0000;">=&lt;</span> <span class="dv" style="color: #AD0000;">7</span><span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-55">    <span class="dt" style="color: #AD0000;">Y</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">Y0</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dt" style="color: #AD0000;">Yd</span><span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">Y</span> <span class="dt" style="color: #AD0000;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">Y</span> <span class="dt" style="color: #AD0000;">=&lt;</span> <span class="dv" style="color: #AD0000;">7</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-56">    member(pos(<span class="dt" style="color: #AD0000;">X</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Piece</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-57">    place_piece(<span class="dt" style="color: #AD0000;">Piece</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">X0</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Y0</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Locs</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Board</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-58"></span>
<span id="cb1-59">piece(a<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">4</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-60">piece(a<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">3</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">4</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-61"></span>
<span id="cb1-62">piece(b<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-63">piece(b<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-64"></span>
<span id="cb1-65">piece(c<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-66">piece(c<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-67">piece(c<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-68">piece(c<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-69"></span>
<span id="cb1-70">piece(d<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-71">piece(d<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-72">piece(d<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span> </span>
<span id="cb1-73">piece(d<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-74"></span>
<span id="cb1-75">piece(e<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-76">piece(e<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">3</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-77">piece(e<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-78">piece(e<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-79"></span>
<span id="cb1-80">piece(f<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-81">piece(f<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-82">piece(f<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-83">piece(f<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-84"></span>
<span id="cb1-85">piece(g<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-86">piece(g<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-87">piece(g<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-88">piece(g<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-89"></span>
<span id="cb1-90">piece(h<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-91">piece(h<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">3</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-92">piece(h<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-93">piece(h<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-94"></span>
<span id="cb1-95">piece(i<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-96">piece(i<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-97">piece(i<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="fu" style="color: #4758AB;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">3</span>)])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-98">piece(i<span class="kw" style="color: #003B4F;">,</span>[(<span class="dv" style="color: #AD0000;">0</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">3</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>),(<span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>),(<span class="dv" style="color: #AD0000;">2</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)])<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
</div>
<p>You can find a copy of this code as a GitHub gist <a href="https://gist.github.com/afvanwoudenberg/d1f2c1721df7762c665af9252e72f1bb">here</a>.</p>
<p>The <code>solve/3</code> predicate is the main predicate that solves the puzzle. It takes as input the X and Y coordinates of the empty cell on the board and returns a solution, which is a list of <code>pos(X,Y,P)</code> terms representing the placement of the pieces on the board. The <code>solve/4</code> predicate is a helper predicate that recursively places the pieces on the board.</p>
<p>The program also includes several other predicates that define the properties of the puzzle, such as the shape and size of each piece, and the rules for placing the pieces on the board. The <code>piece/2</code> predicate defines the shape of each piece, and the <code>place_piece/5</code> predicate checks whether a piece can be placed on a given location on the board.</p>
<p>Finally, the <code>print_board/1</code> predicate is used to print the solution to the puzzle in a readable format.</p>
</section>
<section id="how-to-use-this-solver" class="level2">
<h2 class="anchored" data-anchor-id="how-to-use-this-solver">How to use this solver</h2>
<p>To use this program, open the <code>skyline.pl</code> file in your preferred Prolog interpreter (I personally prefer <a href="https://www.swi-prolog.org/">SWI-Prolog</a>). To find find a solution for when the metal rod is in position (4, 4), simply type the following:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb2-1">print_solution(<span class="dv" style="color: #AD0000;">4</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">4</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<pre><code>+-------+
|ggeeeeh|
|gggdehh|
|ggiddhh|
|iii ddh|
|iiicfff|
|bicccff|
|baaaaaf|
+-------+
true</code></pre>
<p>The helper predicate <code>print_solution/2</code> calls the <code>solve/3</code> to solve and <code>print_board/1</code> to display the solution.</p>
<p>You can press ; to find alternative solutions.</p>
<p>If you want to see all solutions for a given rod position, you can type:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb4-1">findall(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span>print_solution(<span class="dv" style="color: #AD0000;">4</span><span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">4</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>


</section>

 ]]></description>
  <category>programming</category>
  <category>prolog</category>
  <category>puzzles</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/skyline-puzzle/index.html</guid>
  <pubDate>Sat, 03 Oct 2015 22:00:00 GMT</pubDate>
  <media:content url="https://www.aswinvanwoudenberg.com/posts/skyline-puzzle/pieces.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>VBA IBAN Validator</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/vba-iban-validator/index.html</link>
  <description><![CDATA[ 




<p>From February 2014 onwards, IBAN will be the new European standard for bank account numbers. This standardization is part of the SEPA initiative to improve the efficiency of cross-border euro payments.</p>
<p>I wrote an IBAN validator in VBA for an MS Access database I’m maintaining, but you can also use it in Excel or any other application that supports VBA.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>modValidIban.bas</strong></pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode monobasic code-with-copy"><code class="sourceCode monobasic"><span id="cb1-1"><span class="kw" style="color: #003B4F;">Option</span> Compare Database</span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;">Option</span> <span class="kw" style="color: #003B4F;">Explicit</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;">' http://en.wikipedia.org/wiki/International_Bank_Account_Number</span></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;">Private</span> <span class="kw" style="color: #003B4F;">Const</span> IbanCountryLengths <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span> = <span class="st" style="color: #20794D;">"AL28AD24AT20AZ28BH22BE16BA20BR29BG22CR21HR21CY28CZ24DK18DO28EE20FO18"</span> &amp; _</span>
<span id="cb1-6">                                             <span class="st" style="color: #20794D;">"FI18FR27GE22DE22GI23GR27GL18GT28HU28IS26IE22IL23IT27KZ20KW30LV21LB28"</span> &amp; _</span>
<span id="cb1-7">                                             <span class="st" style="color: #20794D;">"LI21LT20LU20MK19MT31MR27MU30MC27MD24ME22NL18NO15PK24PS29PL28PT25RO24"</span> &amp; _</span>
<span id="cb1-8">                                             <span class="st" style="color: #20794D;">"SM27SA24RS22SK24SI19ES24SE24CH21TN24TR26AE23GB22VG24QA29"</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;">Private</span> <span class="kw" style="color: #003B4F;">Function </span>ValidIbanCountryLength(CountryCode <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span>, IbanLength <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Integer</span>) <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Boolean</span></span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;">Dim</span> i <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Integer</span></span>
<span id="cb1-12">    <span class="kw" style="color: #003B4F;">For </span>i = 0 <span class="kw" style="color: #003B4F;">To</span> Len(IbanCountryLengths) / 4 - 1</span>
<span id="cb1-13">        <span class="kw" style="color: #003B4F;">If </span>Mid(IbanCountryLengths, i * 4 + 1, 2) = CountryCode <span class="kw" style="color: #003B4F;">And</span> _</span>
<span id="cb1-14">                    CInt(Mid(IbanCountryLengths, i * 4 + 3, 2)) = IbanLength <span class="kw" style="color: #003B4F;">Then</span></span>
<span id="cb1-15">            ValidIbanCountryLength = <span class="kw" style="color: #003B4F;">True</span></span>
<span id="cb1-16">            <span class="kw" style="color: #003B4F;">Exit Function</span></span>
<span id="cb1-17">        <span class="kw" style="color: #003B4F;">End If</span></span>
<span id="cb1-18">    <span class="kw" style="color: #003B4F;">Next </span>i</span>
<span id="cb1-19">    ValidIbanCountryLength = <span class="kw" style="color: #003B4F;">False</span></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;">End Function</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="kw" style="color: #003B4F;">Private</span> <span class="kw" style="color: #003B4F;">Function </span>Mod97(Num <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span>) <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Integer</span></span>
<span id="cb1-23">    <span class="kw" style="color: #003B4F;">Dim</span> lngTemp <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Long</span></span>
<span id="cb1-24">    <span class="kw" style="color: #003B4F;">Dim</span> strTemp <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span></span>
<span id="cb1-25"></span>
<span id="cb1-26">    <span class="kw" style="color: #003B4F;">Do While </span>Val(Num) &gt;= 97</span>
<span id="cb1-27">        <span class="kw" style="color: #003B4F;">If </span>Len(Num) &gt; 5 <span class="kw" style="color: #003B4F;">Then</span></span>
<span id="cb1-28">            strTemp = Left(Num, 5)</span>
<span id="cb1-29">            Num = Right(Num, Len(Num) - 5)</span>
<span id="cb1-30">        <span class="kw" style="color: #003B4F;">Else</span></span>
<span id="cb1-31">            strTemp = Num</span>
<span id="cb1-32">            Num = <span class="st" style="color: #20794D;">""</span></span>
<span id="cb1-33">        <span class="kw" style="color: #003B4F;">End If</span></span>
<span id="cb1-34">        lngTemp = CLng(strTemp)</span>
<span id="cb1-35">        lngTemp = lngTemp Mod 97</span>
<span id="cb1-36">        strTemp = CStr(lngTemp)</span>
<span id="cb1-37">        Num = strTemp &amp; Num</span>
<span id="cb1-38">    <span class="kw" style="color: #003B4F;">Loop</span></span>
<span id="cb1-39">    Mod97 = CInt(Num)</span>
<span id="cb1-40"><span class="kw" style="color: #003B4F;">End Function</span></span>
<span id="cb1-41"></span>
<span id="cb1-42"><span class="kw" style="color: #003B4F;">Public</span> <span class="kw" style="color: #003B4F;">Function </span>ValidIban(IBAN <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span>) <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Boolean</span></span>
<span id="cb1-43">    <span class="kw" style="color: #003B4F;">Dim</span> strIban <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">String</span></span>
<span id="cb1-44">    <span class="kw" style="color: #003B4F;">Dim</span> i <span class="kw" style="color: #003B4F;">As</span> <span class="dt" style="color: #AD0000;">Integer</span></span>
<span id="cb1-45"></span>
<span id="cb1-46">    strIban = UCase(IBAN)</span>
<span id="cb1-47">    <span class="co" style="color: #5E5E5E;">' Remove spaces</span></span>
<span id="cb1-48">    strIban = Replace(strIban, <span class="st" style="color: #20794D;">" "</span>, <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb1-49"></span>
<span id="cb1-50">    <span class="co" style="color: #5E5E5E;">' Check if IBAN contains only uppercase characters and numbers</span></span>
<span id="cb1-51">    <span class="kw" style="color: #003B4F;">For </span>i = 1 <span class="kw" style="color: #003B4F;">To</span> Len(strIban)</span>
<span id="cb1-52">        <span class="kw" style="color: #003B4F;">If Not</span> ((Asc(Mid(strIban, i, 1)) &lt;= Asc(<span class="st" style="color: #20794D;">"9"</span>) <span class="kw" style="color: #003B4F;">And</span> Asc(Mid(strIban, i, 1)) &gt;= Asc(<span class="st" style="color: #20794D;">"0"</span>)) <span class="kw" style="color: #003B4F;">Or</span> _</span>
<span id="cb1-53">                (Asc(Mid(strIban, i, 1)) &lt;= Asc(<span class="st" style="color: #20794D;">"Z"</span>) <span class="kw" style="color: #003B4F;">And</span> Asc(Mid(strIban, i, 1)) &gt;= Asc(<span class="st" style="color: #20794D;">"A"</span>))) <span class="kw" style="color: #003B4F;">Then</span></span>
<span id="cb1-54">            ValidIban = <span class="kw" style="color: #003B4F;">False</span></span>
<span id="cb1-55">            <span class="kw" style="color: #003B4F;">Exit Function</span></span>
<span id="cb1-56">        <span class="kw" style="color: #003B4F;">End If</span></span>
<span id="cb1-57">    <span class="kw" style="color: #003B4F;">Next </span>i</span>
<span id="cb1-58"></span>
<span id="cb1-59">    <span class="co" style="color: #5E5E5E;">' Check if length of IBAN equals expected length for country</span></span>
<span id="cb1-60">    <span class="kw" style="color: #003B4F;">If Not</span> ValidIbanCountryLength(Left(strIban, 2), Len(strIban)) <span class="kw" style="color: #003B4F;">Then</span></span>
<span id="cb1-61">        ValidIban = <span class="kw" style="color: #003B4F;">False</span></span>
<span id="cb1-62">        <span class="kw" style="color: #003B4F;">Exit Function</span></span>
<span id="cb1-63">    <span class="kw" style="color: #003B4F;">End If</span></span>
<span id="cb1-64"></span>
<span id="cb1-65">    <span class="co" style="color: #5E5E5E;">' Rearrange</span></span>
<span id="cb1-66">    strIban = Right(strIban, Len(strIban) - 4) &amp; Left(strIban, 4)</span>
<span id="cb1-67"></span>
<span id="cb1-68">    <span class="co" style="color: #5E5E5E;">' Replace characters</span></span>
<span id="cb1-69">    <span class="kw" style="color: #003B4F;">For </span>i = 0 <span class="kw" style="color: #003B4F;">To</span> 25</span>
<span id="cb1-70">        strIban = Replace(strIban, Chr(i + Asc(<span class="st" style="color: #20794D;">"A"</span>)), i + 10)</span>
<span id="cb1-71">    <span class="kw" style="color: #003B4F;">Next </span>i</span>
<span id="cb1-72"></span>
<span id="cb1-73">    <span class="co" style="color: #5E5E5E;">' Check remainder</span></span>
<span id="cb1-74">    ValidIban = Mod97(strIban) = 1</span>
<span id="cb1-75"><span class="kw" style="color: #003B4F;">End Function</span></span></code></pre></div>
</div>
<p>You can find a copy of this code as a GitHub gist <a href="https://gist.github.com/afvanwoudenberg/5ab600b1bddea940f9bf7100845f8a6c">here</a>.</p>



 ]]></description>
  <category>programming</category>
  <category>vba</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/vba-iban-validator/index.html</guid>
  <pubDate>Wed, 17 Jul 2013 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Bridge and Torch Puzzle</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/bridge-and-torch-puzzle/index.html</link>
  <description><![CDATA[ 




<p>The <a href="https://en.wikipedia.org/wiki/Bridge_and_torch_problem">Bridge and torch puzzle</a> goes like this:</p>
<blockquote class="blockquote">
<p>Four people need to cross a bridge at night which only supports two people at the same time. Person A needs 1 minute to cross the bridge, B needs 2 minutes, C needs 5 minutes and D needs 10 minutes. When two people cross the bridge they move at the slowest person’s pace. They have a torch which has battery left for only 17 minutes. They can’t cross the bridge without light. How can they manage to cross the bridge?</p>
</blockquote>
<p>In this blog post I give a solution and some code for finding all solutions in Prolog.</p>
<section id="solving-the-puzzle" class="level2">
<h2 class="anchored" data-anchor-id="solving-the-puzzle">Solving the puzzle</h2>
<p>One might guess that an obvious solution would be to let the fastest person (A) shuttle each other person over the bridge and return alone with the torch. This would give the following schedule:</p>
<table class="table">
<tbody>
<tr class="odd">
<td style="text-align: left;">A, B</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">2 minutes</td>
</tr>
<tr class="even">
<td style="text-align: left;">A</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cleftarrow"></td>
<td style="text-align: left;">1 minutes</td>
</tr>
<tr class="odd">
<td style="text-align: left;">A, C</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">5 minutes</td>
</tr>
<tr class="even">
<td style="text-align: left;">A</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cleftarrow"></td>
<td style="text-align: left;">1 minutes</td>
</tr>
<tr class="odd">
<td style="text-align: left;">A, D</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">10 minutes</td>
</tr>
</tbody>
</table>
<p>The total duration of this schedule would be 19 minutes, so the torch would run out of battery while person A and D are still on the bridge.</p>
<p>The optimal solution consists of letting the two slowest people (C and D) cross the bridge together, giving the following schedule:</p>
<table class="table">
<tbody>
<tr class="odd">
<td style="text-align: left;">A, B</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">2 minutes</td>
</tr>
<tr class="even">
<td style="text-align: left;">B</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cleftarrow"></td>
<td style="text-align: left;">2 minutes</td>
</tr>
<tr class="odd">
<td style="text-align: left;">C, D</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">10 minutes</td>
</tr>
<tr class="even">
<td style="text-align: left;">A</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Cleftarrow"></td>
<td style="text-align: left;">1 minutes</td>
</tr>
<tr class="odd">
<td style="text-align: left;">A, B</td>
<td style="text-align: center;"><img src="https://latex.codecogs.com/png.latex?%5Crightarrow"></td>
<td style="text-align: left;">2 minutes</td>
</tr>
</tbody>
</table>
<p>Which gives a total crossing time of exactly 17 minutes.</p>
</section>
<section id="prolog-to-the-rescue" class="level2">
<h2 class="anchored" data-anchor-id="prolog-to-the-rescue">Prolog to the rescue</h2>
<p>Prolog is quite suitable for solving these kinds of search problems.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>bridge.pl</strong></pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">% A Prolog solver for the bridge and torch puzzle</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">% https://en.wikipedia.org/wiki/Bridge_and_torch_problem</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">print_all_solutions <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-5">    findall(<span class="dt" style="color: #AD0000;">_</span><span class="kw" style="color: #003B4F;">,</span>print_solution<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">_</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">print_solution <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-8">    init(<span class="dt" style="color: #AD0000;">State</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-9">    solve(<span class="dt" style="color: #AD0000;">State</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Solution</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">EndState</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-10">    writeln(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">Start state</span><span class="st" style="color: #20794D;">:'</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-11">    writeln(<span class="dt" style="color: #AD0000;">State</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-12">    writeln(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">Solution</span><span class="st" style="color: #20794D;">:'</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-13">    writeln(<span class="dt" style="color: #AD0000;">Solution</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-14">    writeln(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">Final state</span><span class="st" style="color: #20794D;">:'</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-15">    writeln(<span class="dt" style="color: #AD0000;">EndState</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-16"></span>
<span id="cb1-17">solve(<span class="dt" style="color: #AD0000;">State</span><span class="kw" style="color: #003B4F;">,</span>[]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">State</span>) <span class="kw" style="color: #003B4F;">:-</span> goal(<span class="dt" style="color: #AD0000;">State</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-18">solve(<span class="dt" style="color: #AD0000;">State</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Move</span><span class="fu" style="color: #4758AB;">|</span><span class="dt" style="color: #AD0000;">Tail</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">EndState</span>) <span class="kw" style="color: #003B4F;">:-</span> s(<span class="dt" style="color: #AD0000;">State</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Move</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">NewState</span>)<span class="kw" style="color: #003B4F;">,</span> solve(<span class="dt" style="color: #AD0000;">NewState</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tail</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">EndState</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-19"></span>
<span id="cb1-20">goal(state([]<span class="kw" style="color: #003B4F;">,</span>right<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>)) <span class="kw" style="color: #003B4F;">:-</span> <span class="dt" style="color: #AD0000;">T</span> <span class="dt" style="color: #AD0000;">=&lt;</span> <span class="dv" style="color: #AD0000;">17</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-21"></span>
<span id="cb1-22">init(state([a,b,c,d]<span class="kw" style="color: #003B4F;">,</span>left<span class="kw" style="color: #003B4F;">,</span>[]<span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">0</span>))<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-23"></span>
<span id="cb1-24">s(state(<span class="dt" style="color: #AD0000;">L1</span><span class="kw" style="color: #003B4F;">,</span>left<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>)<span class="kw" style="color: #003B4F;">,</span>cross(<span class="dt" style="color: #AD0000;">L3</span>)<span class="kw" style="color: #003B4F;">,</span>state(<span class="dt" style="color: #AD0000;">L4</span><span class="kw" style="color: #003B4F;">,</span>right<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L6</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T2</span>)) <span class="kw" style="color: #003B4F;">:-</span>       </span>
<span id="cb1-25">    select_one_or_two(<span class="dt" style="color: #AD0000;">L1</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L4</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-26">    ord_union(<span class="dt" style="color: #AD0000;">L2</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L6</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-27">    min_time_needed(<span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tn</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-28">    <span class="dt" style="color: #AD0000;">T2</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">T</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dt" style="color: #AD0000;">Tn</span><span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-29">    <span class="dt" style="color: #AD0000;">T2</span> <span class="dt" style="color: #AD0000;">=&lt;</span> <span class="dv" style="color: #AD0000;">17</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-30">s(state(<span class="dt" style="color: #AD0000;">L1</span><span class="kw" style="color: #003B4F;">,</span>right<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>)<span class="kw" style="color: #003B4F;">,</span>cross(<span class="dt" style="color: #AD0000;">L3</span>)<span class="kw" style="color: #003B4F;">,</span>state(<span class="dt" style="color: #AD0000;">L4</span><span class="kw" style="color: #003B4F;">,</span>left<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L5</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T2</span>)) <span class="kw" style="color: #003B4F;">:-</span>       </span>
<span id="cb1-31">    select_one_or_two(<span class="dt" style="color: #AD0000;">L2</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L5</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-32">    ord_union(<span class="dt" style="color: #AD0000;">L1</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L4</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-33">    min_time_needed(<span class="dt" style="color: #AD0000;">L3</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Tn</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-34">    <span class="dt" style="color: #AD0000;">T2</span> <span class="dt" style="color: #AD0000;">is</span> <span class="dt" style="color: #AD0000;">T</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dt" style="color: #AD0000;">Tn</span><span class="kw" style="color: #003B4F;">,</span> </span>
<span id="cb1-35">    <span class="dt" style="color: #AD0000;">T2</span> <span class="dt" style="color: #AD0000;">=&lt;</span> <span class="dv" style="color: #AD0000;">17</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-36"></span>
<span id="cb1-37">select_one_or_two(<span class="dt" style="color: #AD0000;">L</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Sel</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span>) <span class="kw" style="color: #003B4F;">:-</span> select(<span class="dt" style="color: #AD0000;">Sel</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-38">select_one_or_two(<span class="dt" style="color: #AD0000;">L</span><span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">Sel1</span>,<span class="dt" style="color: #AD0000;">Sel2</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span>) <span class="kw" style="color: #003B4F;">:-</span> select(<span class="dt" style="color: #AD0000;">Sel1</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">NewL</span>)<span class="kw" style="color: #003B4F;">,</span> select(<span class="dt" style="color: #AD0000;">Sel2</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">NewL</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">L2</span>)<span class="kw" style="color: #003B4F;">,</span> <span class="dt" style="color: #AD0000;">Sel1</span><span class="fu" style="color: #4758AB;">@&lt;</span><span class="dt" style="color: #AD0000;">Sel2</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-39"></span>
<span id="cb1-40">min_time_needed([<span class="dt" style="color: #AD0000;">A</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>) <span class="kw" style="color: #003B4F;">:-</span> time_needed(<span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-41">min_time_needed([<span class="dt" style="color: #AD0000;">A</span>,<span class="dt" style="color: #AD0000;">B</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>) <span class="kw" style="color: #003B4F;">:-</span> time_needed(<span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T1</span>)<span class="kw" style="color: #003B4F;">,</span> time_needed(<span class="dt" style="color: #AD0000;">B</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T2</span>)<span class="kw" style="color: #003B4F;">,</span> max_list([<span class="dt" style="color: #AD0000;">T1</span>,<span class="dt" style="color: #AD0000;">T2</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">T</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">time_needed(a<span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">1</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-44">time_needed(b<span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">2</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-45">time_needed(c<span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">5</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-46">time_needed(d<span class="kw" style="color: #003B4F;">,</span><span class="dv" style="color: #AD0000;">10</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
</div>
<p>The <code>init</code> predicate defines the initial state of the puzzle, which includes the positions of the four people and the torch, and the time taken so far. The <code>goal</code> predicate defines the goal state, which is when all four people are on the other side of the bridge in at most 17 minutes.</p>
<p>The program finds a sequence of moves that will get all four people across the bridge in the shortest time. The <code>solve</code> predicate recursively searches for a sequence of moves that will lead to the goal state. The <code>s</code> predicate defines the possible moves that can be made from a given state. The <code>select_one_or_two</code> predicate selects one or two people from the group to cross the bridge. The <code>min_time_needed</code> predicate calculates the time needed for the selected people to cross the bridge.</p>
<p>I chose to represent a state by keeping track of two lists, one for each side of the bridge. An alternative representation might be to use one list with the times it takes each person and a positive/negative sign that indicates on which side of the brige the person is. This list could look like this: <code>[1,2,-5,-10]</code> and would indicate that the persons with times 1 and 2 are on one side of the bridge and the others would be on the other side. We could add another number, say 1 (or -1), to indicate on which side the flashlight is. Finding a suitable representation is often half the battle and multiple alternatives might work equally well.</p>
<p>You can find a copy of this code as a GitHub gist <a href="https://gist.github.com/afvanwoudenberg/e7107f7b2b1e9e5a59f231ccdafd4ab1">here</a>.</p>
</section>
<section id="running-the-solver" class="level2">
<h2 class="anchored" data-anchor-id="running-the-solver">Running the solver</h2>
<p>To run the solver, you first start the Prolog interpreter (I use <a href="https://www.swi-prolog.org/">SWI-Prolog</a>) by opening up a terminal and typing:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">swipl</span></span></code></pre></div>
<p>This will start the Prolog interpreter. You can then load the solver by typing:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb3-1">[bridge]<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<p>This loads the <code>bridge.pl</code> file. You can execute the solver which will output all solutions to the console:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb4-1">print_all_solutions<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<pre><code>Start state:
state([a,b,c,d],left,[],0)
Solution:
[cross([a,b]),cross([a]),cross([c,d]),cross([b]),cross([a,b])]
Final state:
state([],right,[a,b,c,d],17)

Start state:
state([a,b,c,d],left,[],0)
Solution:
[cross([a,b]),cross([b]),cross([c,d]),cross([a]),cross([a,b])]
Final state:
state([],right,[a,b,c,d],17)</code></pre>


</section>

 ]]></description>
  <category>programming</category>
  <category>prolog</category>
  <category>puzzles</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/bridge-and-torch-puzzle/index.html</guid>
  <pubDate>Thu, 02 Jul 2009 22:00:00 GMT</pubDate>
</item>
<item>
  <title>Who Owns the Zebra</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/who-owns-the-zebra/index.html</link>
  <description><![CDATA[ 




<p>On December 17, 1962, <a href="https://www.paperworld.com.au/magazines/life-international.html">Life International magazine</a> published the following puzzle:</p>
<blockquote class="blockquote">
<ol type="1">
<li>There are five houses.</li>
<li>The Englishman lives in the red house.</li>
<li>The Spaniard owns the dog.</li>
<li>Coffee is drunk in the green house.</li>
<li>The Ukrainian drinks tea.</li>
<li>The green house is immediately to the right of the ivory house.</li>
<li>The Old Gold smoker owns snails.</li>
<li>Kools are smoked in the yellow house.</li>
<li>Milk is drunk in the middle house.</li>
<li>The Norwegian lives in the first house.</li>
<li>The man who smokes Chesterfields lives in the house next to the man with the fox.</li>
<li>Kools are smoked in the house next to the house where the horse is kept.</li>
<li>The Lucky Strike smoker drinks orange juice.</li>
<li>The Japanese smokes Parliaments.</li>
<li>The Norwegian lives next to the blue house.</li>
</ol>
<p>Now, who drinks water? Who owns the zebra?</p>
<p>In the interest of clarity, it must be added that each of the five houses is painted a different color, and their inhabitants are of different national extractions, own different pets, drink different beverages and smoke different brands of American cigarets.</p>
<p>One other thing: In Statement 6, right means your right.</p>
</blockquote>
<p>This puzzle is said to be invented by Einstein and therefore sometimes referred to as <em>Einstein’s puzzle</em> or <em>Einstein’s riddle</em>. Supposedly, he also claimed that only 2% of the world’s population would be smart enough to solve it. For neither claim is there any evidence.</p>
<section id="solving-the-puzzle-using-prolog" class="level2">
<h2 class="anchored" data-anchor-id="solving-the-puzzle-using-prolog">Solving the puzzle using Prolog</h2>
<p>As an example of how to solve these kinds of logic puzzles using Prolog, I wrote this code:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>einstein.pl</strong></pre>
</div>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">% A Prolog solver for the Zebra puzzle a.k.a. Einstein's riddle.</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">% https://en.wikipedia.org/wiki/Zebra_Puzzle</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">einstein <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-5">    einstein(<span class="dt" style="color: #AD0000;">Solution</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-6">    write_sol(<span class="dt" style="color: #AD0000;">Solution</span>)<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-7"></span>
<span id="cb1-8">einstein(<span class="dt" style="color: #AD0000;">Sol</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-9">    <span class="dt" style="color: #AD0000;">Sol</span> <span class="kw" style="color: #003B4F;">=</span> [ </span>
<span id="cb1-10">        [<span class="dv" style="color: #AD0000;">1</span>,<span class="dt" style="color: #AD0000;">N1</span>,<span class="dt" style="color: #AD0000;">C1</span>,<span class="dt" style="color: #AD0000;">P1</span>,<span class="dt" style="color: #AD0000;">D1</span>,<span class="dt" style="color: #AD0000;">S1</span>],                             <span class="co" style="color: #5E5E5E;">% There are five houses.</span></span>
<span id="cb1-11">        [<span class="dv" style="color: #AD0000;">2</span>,<span class="dt" style="color: #AD0000;">N2</span>,<span class="dt" style="color: #AD0000;">C2</span>,<span class="dt" style="color: #AD0000;">P2</span>,<span class="dt" style="color: #AD0000;">D2</span>,<span class="dt" style="color: #AD0000;">S2</span>],</span>
<span id="cb1-12">        [<span class="dv" style="color: #AD0000;">3</span>,<span class="dt" style="color: #AD0000;">N3</span>,<span class="dt" style="color: #AD0000;">C3</span>,<span class="dt" style="color: #AD0000;">P3</span>,<span class="dt" style="color: #AD0000;">D3</span>,<span class="dt" style="color: #AD0000;">S3</span>],</span>
<span id="cb1-13">        [<span class="dv" style="color: #AD0000;">4</span>,<span class="dt" style="color: #AD0000;">N4</span>,<span class="dt" style="color: #AD0000;">C4</span>,<span class="dt" style="color: #AD0000;">P4</span>,<span class="dt" style="color: #AD0000;">D4</span>,<span class="dt" style="color: #AD0000;">S4</span>],</span>
<span id="cb1-14">        [<span class="dv" style="color: #AD0000;">5</span>,<span class="dt" style="color: #AD0000;">N5</span>,<span class="dt" style="color: #AD0000;">C5</span>,<span class="dt" style="color: #AD0000;">P5</span>,<span class="dt" style="color: #AD0000;">D5</span>,<span class="dt" style="color: #AD0000;">S5</span>]]<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-15">    member([<span class="dt" style="color: #AD0000;">_</span>,englishman,red,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>               <span class="co" style="color: #5E5E5E;">% The Englishman lives in the red house.</span></span>
<span id="cb1-16">    member([<span class="dt" style="color: #AD0000;">_</span>,spaniard,<span class="dt" style="color: #AD0000;">_</span>,dog,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                 <span class="co" style="color: #5E5E5E;">% The Spaniard owns the dog.</span></span>
<span id="cb1-17">    member([<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,green,<span class="dt" style="color: #AD0000;">_</span>,coffee,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                 <span class="co" style="color: #5E5E5E;">% Coffee is drunk in the green house.</span></span>
<span id="cb1-18">    member([<span class="dt" style="color: #AD0000;">_</span>,ukrainian,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,tea,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                <span class="co" style="color: #5E5E5E;">% The Ukrainian drinks tea.</span></span>
<span id="cb1-19">    member([<span class="dt" style="color: #AD0000;">GH</span>,<span class="dt" style="color: #AD0000;">_</span>,green,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                     <span class="co" style="color: #5E5E5E;">% The green house is immediately to the right of the ivory house.</span></span>
<span id="cb1-20">    member([<span class="dt" style="color: #AD0000;">IH</span>,<span class="dt" style="color: #AD0000;">_</span>,ivory,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-21">    <span class="dt" style="color: #AD0000;">GH</span> <span class="dt" style="color: #AD0000;">=:=</span> <span class="dt" style="color: #AD0000;">IH</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-22">    member([<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,snails,<span class="dt" style="color: #AD0000;">_</span>,old_gold]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>              <span class="co" style="color: #5E5E5E;">% The Old Gold smoker owns snails.</span></span>
<span id="cb1-23">    member([<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,yellow,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,kools]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                 <span class="co" style="color: #5E5E5E;">% Kools are smoked in the yellow house.</span></span>
<span id="cb1-24">    member([<span class="dv" style="color: #AD0000;">3</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,milk,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                       <span class="co" style="color: #5E5E5E;">% Milk is drunk in the middle house.</span></span>
<span id="cb1-25">    member([<span class="dv" style="color: #AD0000;">1</span>,norwegian,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                  <span class="co" style="color: #5E5E5E;">% The Norwegian lives in the first house.</span></span>
<span id="cb1-26">    member([<span class="dt" style="color: #AD0000;">BH</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,chesterfields]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>             <span class="co" style="color: #5E5E5E;">% The man who smokes Chesterfields lives in the house next to the man with the fox.</span></span>
<span id="cb1-27">    member([<span class="dt" style="color: #AD0000;">CH</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,fox,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-28">    next_to(<span class="dt" style="color: #AD0000;">BH</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">CH</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-29">    member([<span class="dt" style="color: #AD0000;">DH</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,kools]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                     <span class="co" style="color: #5E5E5E;">% Kools are smoked in the house next to the house where the horse is kept.</span></span>
<span id="cb1-30">    member([<span class="dt" style="color: #AD0000;">HH</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,horse,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-31">    next_to(<span class="dt" style="color: #AD0000;">DH</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">HH</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-32">    member([<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,orange_juice,lucky_strike]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>    <span class="co" style="color: #5E5E5E;">% The Lucky Strike smoker drinks organge juice.</span></span>
<span id="cb1-33">    member([<span class="dt" style="color: #AD0000;">_</span>,japanese,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,parliaments]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>         <span class="co" style="color: #5E5E5E;">% The Japanese smokes Parliaments</span></span>
<span id="cb1-34">    member([<span class="dt" style="color: #AD0000;">NH</span>,norwegian,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span>                 <span class="co" style="color: #5E5E5E;">% The Norwegian lives next to the blue house.</span></span>
<span id="cb1-35">    member([<span class="dt" style="color: #AD0000;">BlH</span>,<span class="dt" style="color: #AD0000;">_</span>,blue,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>,<span class="dt" style="color: #AD0000;">_</span>]<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Sol</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-36">    next_to(<span class="dt" style="color: #AD0000;">NH</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">BlH</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-37">    permutation([englishman,spaniard,ukrainian,japanese,norwegian]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">N1</span>,<span class="dt" style="color: #AD0000;">N2</span>,<span class="dt" style="color: #AD0000;">N3</span>,<span class="dt" style="color: #AD0000;">N4</span>,<span class="dt" style="color: #AD0000;">N5</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-38">    permutation([green,ivory,yellow,blue,red]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">C1</span>,<span class="dt" style="color: #AD0000;">C2</span>,<span class="dt" style="color: #AD0000;">C3</span>,<span class="dt" style="color: #AD0000;">C4</span>,<span class="dt" style="color: #AD0000;">C5</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-39">    permutation([dog,snails,fox,horse,zebra]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">P1</span>,<span class="dt" style="color: #AD0000;">P2</span>,<span class="dt" style="color: #AD0000;">P3</span>,<span class="dt" style="color: #AD0000;">P4</span>,<span class="dt" style="color: #AD0000;">P5</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-40">    permutation([coffee,tea,milk,orange_juice,water]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">D1</span>,<span class="dt" style="color: #AD0000;">D2</span>,<span class="dt" style="color: #AD0000;">D3</span>,<span class="dt" style="color: #AD0000;">D4</span>,<span class="dt" style="color: #AD0000;">D5</span>])<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-41">    permutation([old_gold,kools,chesterfields,lucky_strike,parliaments]<span class="kw" style="color: #003B4F;">,</span>[<span class="dt" style="color: #AD0000;">S1</span>,<span class="dt" style="color: #AD0000;">S2</span>,<span class="dt" style="color: #AD0000;">S3</span>,<span class="dt" style="color: #AD0000;">S4</span>,<span class="dt" style="color: #AD0000;">S5</span>])<span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-42"></span>
<span id="cb1-43">next_to(<span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">B</span>) <span class="kw" style="color: #003B4F;">:-</span> <span class="dt" style="color: #AD0000;">A</span> <span class="dt" style="color: #AD0000;">=:=</span> <span class="dt" style="color: #AD0000;">B</span> <span class="dt" style="color: #AD0000;">-</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-44">next_to(<span class="dt" style="color: #AD0000;">A</span><span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">B</span>) <span class="kw" style="color: #003B4F;">:-</span> <span class="dt" style="color: #AD0000;">A</span> <span class="dt" style="color: #AD0000;">=:=</span> <span class="dt" style="color: #AD0000;">B</span> <span class="dt" style="color: #AD0000;">+</span> <span class="dv" style="color: #AD0000;">1</span><span class="kw" style="color: #003B4F;">.</span></span>
<span id="cb1-45"></span>
<span id="cb1-46">write_sol(<span class="dt" style="color: #AD0000;">Solution</span>) <span class="kw" style="color: #003B4F;">:-</span></span>
<span id="cb1-47">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'+--+------------+------------+------------+-------------+--------------+'</span>)<span class="kw" style="color: #003B4F;">,</span><span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-48">    maplist(writef(<span class="st" style="color: #20794D;">'|%2L|%12L|%12L|%12L|%13L|%14L|</span><span class="ch" style="color: #20794D;">\n</span><span class="st" style="color: #20794D;">'</span>)<span class="kw" style="color: #003B4F;">,</span><span class="dt" style="color: #AD0000;">Solution</span>)<span class="kw" style="color: #003B4F;">,</span></span>
<span id="cb1-49">    <span class="fu" style="color: #4758AB;">write</span>(<span class="st" style="color: #20794D;">'+--+------------+------------+------------+-------------+--------------+'</span>)<span class="kw" style="color: #003B4F;">,</span><span class="fu" style="color: #4758AB;">nl</span><span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
</div>
<p>The program uses a list of lists to represent the houses and applies a set of constraints to determine the correct answer.</p>
<p>The <code>einstein/1</code> predicate defines the structure of the solution as a list of lists called <code>Sol</code>. Each sublist corresponds to a house and contains five variables representing the house number, nationality, color, pet, drink, and cigarette brand.</p>
<p>The predicate then uses a set of <code>member/2</code> and <code>next_to/2</code> predicates to apply the given clues and constraints to the list of houses. For example, <code>member([_,englishman,red,_,_,_],Sol)</code> specifies that the Englishman lives in the red house, and the predicates <code>member([BH,_,_,_,_,chesterfields],Sol)</code>, <code>member([CH,_,_,fox,_,_],Sol)</code>, and <code>next_to(BH,CH)</code> specify that the man who smokes Chesterfields lives in the house next to the man with the fox.</p>
<p>Finally, <code>write_sol/1</code> outputs the solutions in a formatted table.</p>
<p>You can find a copy of this code as a GitHub gist <a href="https://gist.github.com/afvanwoudenberg/cf5d0c4e8f9c28f8cfef301969502a5c">here</a>.</p>
</section>
<section id="running-the-solver" class="level2">
<h2 class="anchored" data-anchor-id="running-the-solver">Running the solver</h2>
<p>To run the solver, you first start the Prolog interpreter (I use <a href="https://www.swi-prolog.org/">SWI-Prolog</a>) by opening up a terminal and typing:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">swipl</span></span></code></pre></div>
<p>This will start the Prolog interpreter. You can then load the solver by typing:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb3-1">[einstein]<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<p>This loads the <code>einstein.pl</code> file. You can execute the solver which will output the solution to the console:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb4-1">einstein<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<pre><code>+--+------------+------------+------------+-------------+--------------+
|1 |norwegian   |yellow      |fox         |water        |kools         |
|2 |ukrainian   |blue        |horse       |tea          |chesterfields |
|3 |englishman  |red         |snails      |milk         |old_gold      |
|4 |spaniard    |ivory       |dog         |orange_juice |lucky_strike  |
|5 |japanese    |green       |zebra       |coffee       |parliaments   |
+--+------------+------------+------------+-------------+--------------+</code></pre>


</section>

 ]]></description>
  <category>programming</category>
  <category>prolog</category>
  <category>puzzles</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/who-owns-the-zebra/index.html</guid>
  <pubDate>Thu, 25 Oct 2007 22:00:00 GMT</pubDate>
</item>
<item>
  <title>A Brainf*ck Interpreter in Prolog</title>
  <dc:creator>Aswin van Woudenberg</dc:creator>
  <link>https://www.aswinvanwoudenberg.com/posts/a-brainfuck-interpreter-in-prolog/index.html</link>
  <description><![CDATA[ 




<p>If you’re a programmer then you must be a masochist. After all, what kind of person enjoys staring at a screen for hours on end, squinting at lines of code that seem to blend together like a modern art painting? What kind of person willingly submits themselves to the endless frustration of debugging, only to find that the solution was something as simple as a missing semicolon?</p>
<p>If this is you then you’re going to love <a href="http://en.wikipedia.org/wiki/Brainfuck">Brainfuck</a> - the programming language that’s minimalistic to the point of absurdity. With only eight commands, Brainfuck is both challenging and frustrating for even the most experienced programmers.</p>
<p>In this post I’ll give a brief overview of the language and then describe how to use the Brainfuck interpreter I wrote.</p>
<section id="how-does-brainfuck-work" class="level2">
<h2 class="anchored" data-anchor-id="how-does-brainfuck-work">How does Brainfuck work?</h2>
<p>Brainfuck programs operate on a memory tape consisting of an array of cells, each containing a single byte. With the tape initially set to zero, Brainfuck programs modify the values in the memory cells, move the pointer left and right along the tape, and perform input and output operations using its eight commands.</p>
</section>
<section id="commands" class="level2">
<h2 class="anchored" data-anchor-id="commands">Commands</h2>
<p>Here’s a breakdown of the available commands in Brainfuck:</p>
<ul>
<li><code>&lt;</code>: Move the pointer one cell to the left.</li>
<li><code>&gt;</code>: Move the pointer one cell to the right.</li>
<li><code>+</code>: Increment the value of the cell the pointer is pointing to by one.</li>
<li><code>-</code>: Decrement the value of the cell the pointer is pointing to by one.</li>
<li><code>.</code>: Output the value of the cell the pointer is pointing to.</li>
<li><code>,</code>: Input a byte and store its value in the cell the pointer is pointing to.</li>
<li><code>[</code>: If the value of the cell the pointer is pointing to is zero, jump forward to the corresponding <code>]</code> command.</li>
<li><code>]</code>: If the value of the cell the pointer is pointing to is non-zero, jump back to the corresponding <code>[</code> command.</li>
</ul>
<p>Due to its minimalistic syntax, Brainfuck is used to challenge and amuse programmers. I’ll be honest - programming in Brainfuck is an absolute nightmare. Writing an interpreter for it is easy though.</p>
</section>
<section id="using-the-interpreter" class="level2">
<h2 class="anchored" data-anchor-id="using-the-interpreter">Using the interpreter</h2>
<p>You can download my Brainfuck interpreter <a href="https://github.com/afvanwoudenberg/bf">here</a>.</p>
<p>The Prolog program provided, <code>bf.pl</code>, is the interpreter. It defines a number of Prolog predicates that can be used to interpret Brainfuck programs. The interpreter uses a list to represent the memory tape, and provides predicates for setting and getting the values of cells, as well as for incrementing and decrementing cell values.</p>
<p>The main predicate, <code>run(Prog)</code>, takes a list of Brainfuck commands as input and interprets the program. It uses a helper predicate, <code>sequence/4</code>, to recursively process each command in the program, updating the memory tape and pointer as necessary.</p>
<p>My interpreter isn’t the fastest, but it does have dynamic memory tape length. Most other interpreters have a fixed tape length of (usually) 30,000 cells.</p>
</section>
<section id="running-brainfuck-programs" class="level2">
<h2 class="anchored" data-anchor-id="running-brainfuck-programs">Running Brainfuck programs</h2>
<p>I’ve included a couple of example programs taken from <a href="http://esoteric.sange.fi/brainfuck/">The Brainfuck Archive</a>, including a “Hello World!” program. To execute a Brainfuck program using the interpreter, you can use the <code>run_bf_program/1</code> predicate which in turn uses the <code>run/1</code> predicate.</p>
<p>For example, to run the “Hello World!” program, you first start the Prolog interpreter (I use <a href="https://www.swi-prolog.org/">SWI-Prolog</a>) by opening up a terminal and typing:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;">swipl</span></span></code></pre></div>
<p>This will start the Prolog interpreter. You can then load the Brainfuck interpreter by typing:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb2-1">[bf]<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<p>This loads the <code>bf.pl</code> file into the interpreter. You can then run a Brainfuck program using the <code>run_bf_program/1</code> predicate, like so:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode prolog code-with-copy"><code class="sourceCode prolog"><span id="cb3-1">run_bf_program(<span class="st" style="color: #20794D;">'</span><span class="er" style="color: #AD0000;">hellobf</span><span class="st" style="color: #20794D;">.</span><span class="er" style="color: #AD0000;">bf</span><span class="st" style="color: #20794D;">'</span>)<span class="kw" style="color: #003B4F;">.</span></span></code></pre></div>
<p>This will run the <code>hellobf.bf</code> program and output the famous “Hello World!” message to the console.</p>
<p>Alternatively, you can execute these three steps at once by typing:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;">swipl</span> <span class="at" style="color: #657422;">-s</span> bf.pl <span class="at" style="color: #657422;">-g</span> <span class="st" style="color: #20794D;">"run_bf_program('hellobf.bf'), halt."</span></span></code></pre></div>
<p>Adding <code>halt</code> will make the Prolog interpreter exit after the Brainfuck <code>run_bf_program/1</code> predicate has finished.</p>
<p>You can also run Brainfuck code directly like this:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;">swipl</span> <span class="at" style="color: #657422;">-s</span> bf.pl <span class="at" style="color: #657422;">-g</span> <span class="st" style="color: #20794D;">"atom_chars('++++[++++&gt;---&lt;]&gt;-.---[-----&gt;+&lt;]&gt;-.+++[-&gt;+++&lt;]&gt;++.++++++++.+++++.--------.---[-&gt;+++&lt;]&gt;+.-[---&gt;+&lt;]&gt;.++++++++.',Chars), run(Chars), halt."</span></span></code></pre></div>
<p>Happy coding and good luck with your sanity!</p>


</section>

 ]]></description>
  <category>programming</category>
  <category>esoteric</category>
  <category>prolog</category>
  <guid>https://www.aswinvanwoudenberg.com/posts/a-brainfuck-interpreter-in-prolog/index.html</guid>
  <pubDate>Thu, 04 Jan 2007 23:00:00 GMT</pubDate>
  <media:content url="https://www.aswinvanwoudenberg.com/posts/a-brainfuck-interpreter-in-prolog/image.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
